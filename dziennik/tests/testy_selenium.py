from selenium import webdriver
from django.contrib.staticfiles.testing import StaticLiveServerTestCase
from django.urls import reverse , resolve
from django.test import TestCase , Client
from dziennik.models import User,UserManager
from dziennik.forms import RegisterForm
import time
from webdriver_manager.chrome import ChromeDriverManager
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.common.by import By
import re

# Ważne!!!!!!!!!!!!!!!!!!!!!
# każdy test musi zaczynać się od słowa kluczowego 'test' inaczej się wypierdoli :)
# yyyyyyyyyyyYYYYYYYYYYYYYYYYYYYYYYyyyyyyyyyyyyyyyyyyyyyyyyyyyyYYYYYYYYYYYY


class TestProject(StaticLiveServerTestCase):
    def setUp(self):
        self.browser = webdriver.Chrome(ChromeDriverManager().install())
        self.wait = WebDriverWait(self.browser, 10)
    
    def test_login(self):
        self.browser.get('http://localhost:8000/login')
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Marik1234')
        login.send_keys('dziennik@mail.com')
        button.submit()
        self.wait.until(EC.url_to_be('http://localhost:8000/'))
    def test_login1(self):
        self.browser.get('http://localhost:8000/login')
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')    
        password.send_keys('')
        login.send_keys('dziennik@mail.com')
        button.submit()
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div/div/div/div/form/div[4]/p"), "hasło się nie zgadzją."))
    def test_login2(self):
        self.browser.get('http://localhost:8000/login')
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('blednehaslo')
        login.send_keys('dziennik@mail.com')
        button.submit()
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div/div/div/div/form/div[4]/p"), "hasło się nie zgadzją."))
    """ Testy Rejestracja Uzytkownik"""
    """ T4 Rejestracja użytkownika poprawne"""
    def test_register_person_T4(self):
        self.browser.get('http://localhost:8000/signup/person')
        time.sleep(10)
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[7]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[9]/button')      
        name.send_keys('Mateusz')
        surname.send_keys('Wicki')
        email.send_keys('mateuszwicki1@mail.com')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik1')
        number.send_keys('123456789')
        button.submit()
        self.wait.until(EC.presence_of_element_located((By.CLASS_NAME, 'popup')))
    """ T5 Rejestracja użytkownika niepoprawne - niezgadzające się hasła"""
    def test_register_person_T5(self):
        self.browser.get('http://localhost:8000/signup/person')
        time.sleep(10)
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[7]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[9]/button')      
        name.send_keys('Mateusz')
        surname.send_keys('Wicki')
        email.send_keys('mateuszwicki1@mail.com')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik2')
        number.send_keys('123456789')
        button.submit()
        self.wait.until(EC.presence_of_element_located((By.CLASS_NAME, 'popup')))
    """ T6 Rejestracja użytkownika niepoprawne - brak podania hasła"""
    def test_register_person_T6(self):
        self.browser.get('http://localhost:8000/signup/person')
        time.sleep(10)
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[7]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[9]/button')      
        name.send_keys('Mateusz')
        surname.send_keys('Wicki')
        email.send_keys('mateuszwicki1@mail.com')
        password1.send_keys('')
        password2.send_keys('')
        number.send_keys('123456789')
        button.submit()
        self.wait.until(EC.presence_of_element_located((By.CLASS_NAME, 'popup')))
    """ T13 Rejestracja użytkownika niepoprawne - brak imienia"""
    def test_register_person_T13(self):
        self.browser.get('http://localhost:8000/signup/person')
        time.sleep(10)
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[7]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[9]/button')      
        name.send_keys('')
        surname.send_keys('Wicki')
        email.send_keys('mateuszwicki1@mail.com')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik1')
        number.send_keys('123456789')
        button.submit()
        self.wait.until(EC.presence_of_element_located((By.CLASS_NAME, 'popup')))
    """ T14 Rejestracja użytkownika niepoprawne - błędne imię"""
    def test_register_person_T14(self):
        self.browser.get('http://localhost:8000/signup/person')
        time.sleep(10)
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[7]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[9]/button')      
        name.send_keys('Mateusz1')
        surname.send_keys('Wicki')
        email.send_keys('mateuszwicki1@mail.com')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik1')
        number.send_keys('123456789')
        button.submit()
        self.wait.until(EC.presence_of_element_located((By.CLASS_NAME, 'popup')))
    """ T15 Rejestracja użytkownika niepoprawne - brak nazwiska"""
    def test_register_person_T15(self):
        self.browser.get('http://localhost:8000/signup/person')
        time.sleep(10)
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[7]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[9]/button')      
        name.send_keys('Mateusz')
        surname.send_keys('')
        email.send_keys('mateuszwicki1@mail.com')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik1')
        number.send_keys('123456789')
        button.submit()
        self.wait.until(EC.presence_of_element_located((By.CLASS_NAME, 'popup')))
    """ T16 Rejestracja użytkownika niepoprawne - błędne nazwisko"""
    def test_register_person_T16(self):
        self.browser.get('http://localhost:8000/signup/person')
        time.sleep(10)
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[7]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[9]/button')      
        name.send_keys('Mateusz')
        surname.send_keys('Wicki1')
        email.send_keys('mateuszwicki1@mail.com')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik1')
        number.send_keys('123456789')
        button.submit()
        self.wait.until(EC.presence_of_element_located((By.CLASS_NAME, 'popup')))
    """ T17 Rejestracja użytkownika niepoprawne - brak maila"""
    def test_register_person_T17(self):
        self.browser.get('http://localhost:8000/signup/person')
        time.sleep(10)
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[7]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[9]/button')      
        name.send_keys('Mateusz')
        surname.send_keys('Wicki')
        email.send_keys('')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik1')
        number.send_keys('123456789')
        button.submit()
        self.wait.until(EC.presence_of_element_located((By.CLASS_NAME, 'popup')))
    """ T18 Rejestracja użytkownika niepoprawne - błędny mail bez znaku “@”"""
    def test_register_person_T18(self):
        self.browser.get('http://localhost:8000/signup/person')
        time.sleep(10)
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[7]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[9]/button')      
        name.send_keys('Mateusz')
        surname.send_keys('Wicki')
        email.send_keys('mateuszwicki1mail.com')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik1')
        number.send_keys('123456789')
        button.submit()
        self.wait.until(EC.presence_of_element_located((By.CLASS_NAME, 'popup')))
    """ T19 Rejestracja użytkownika niepoprawne - błędny mail bez “.”"""
    def test_register_person_T19(self):
        self.browser.get('http://localhost:8000/signup/person')
        time.sleep(10)
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[7]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[9]/button')      
        name.send_keys('Mateusz')
        surname.send_keys('Wicki')
        email.send_keys('mateuszwicki1@mailcom')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik1')
        number.send_keys('123456789')
        button.submit()
        self.wait.until(EC.presence_of_element_located((By.CLASS_NAME, 'popup')))
    """ T20 Rejestracja użytkownika niepoprawne - błędny mail bez “@….”"""
    def test_register_person_T20(self):
        self.browser.get('http://localhost:8000/signup/person')
        time.sleep(10)
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[7]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[9]/button')      
        name.send_keys('Mateusz')
        surname.send_keys('Wicki')
        email.send_keys('mateuszwicki1')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik1')
        number.send_keys('123456789')
        button.submit()
        self.wait.until(EC.presence_of_element_located((By.CLASS_NAME, 'popup')))
    """ T21 Rejestracja użytkownika niepoprawne - za krótkie hasło"""
    def test_register_person_T21(self):
        self.browser.get('http://localhost:8000/signup/person')
        time.sleep(10)
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[7]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[9]/button')      
        name.send_keys('Mateusz')
        surname.send_keys('Wicki')
        email.send_keys('mateuszwicki1@mail.com')
        password1.send_keys('Dzie1')
        password2.send_keys('Dzie1')
        number.send_keys('123456789')
        button.submit()
        self.wait.until(EC.presence_of_element_located((By.CLASS_NAME, 'popup')))
    """ T22 Rejestracja użytkownika niepoprawne - hasło bez cyfry"""
    def test_register_person_T22(self):
        self.browser.get('http://localhost:8000/signup/person')
        time.sleep(10)
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[7]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[9]/button')      
        name.send_keys('Mateusz')
        surname.send_keys('Wicki')
        email.send_keys('mateuszwicki1@mail.com')
        password1.send_keys('Dziennik')
        password2.send_keys('Dziennik')
        number.send_keys('123456789')
        button.submit()
        self.wait.until(EC.presence_of_element_located((By.CLASS_NAME, 'popup')))
    """ T23 Rejestracja użytkownika niepoprawne - hasło bez dużej litery"""
    def test_register_person_T23(self):
        self.browser.get('http://localhost:8000/signup/person')
        time.sleep(10)
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[7]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[9]/button')      
        name.send_keys('Mateusz')
        surname.send_keys('Wicki')
        email.send_keys('mateuszwicki1@mail.com')
        password1.send_keys('dziennik1')
        password2.send_keys('dziennik1')
        number.send_keys('123456789')
        button.submit()
        self.wait.until(EC.presence_of_element_located((By.CLASS_NAME, 'popup')))
    """ T24 Rejestracja użytkownika niepoprawne - błędny numer telefonu"""
    def test_register_person_T24(self):
        self.browser.get('http://localhost:8000/signup/person')
        time.sleep(10)
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[7]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[9]/button')      
        name.send_keys('Mateusz')
        surname.send_keys('Wicki')
        email.send_keys('mateuszwicki1@mail.com')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik1')
        number.send_keys('123456abc')
        button.submit()
        self.wait.until(EC.presence_of_element_located((By.CLASS_NAME, 'popup')))
    """ T25 Rejestracja użytkownika niepoprawne - za krótki numer telefonu"""
    def test_register_person_T25(self):
        self.browser.get('http://localhost:8000/signup/person')
        time.sleep(10)
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[7]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[9]/button')      
        name.send_keys('Mateusz')
        surname.send_keys('Wicki')
        email.send_keys('mateuszwicki1@mail.com')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik1')
        number.send_keys('12345678')
        button.submit()
        self.wait.until(EC.presence_of_element_located((By.CLASS_NAME, 'popup')))
    """ T26 Rejestracja użytkownika niepoprawne - za długi numer telefonu"""
    def test_register_person_T26(self):
        self.browser.get('http://localhost:8000/signup/person')
        time.sleep(10)
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[7]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[9]/button')      
        name.send_keys('Mateusz')
        surname.send_keys('Wicki')
        email.send_keys('mateuszwicki1@mail.com')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik1')
        number.send_keys('1234567890123456')
        button.submit()
        self.wait.until(EC.presence_of_element_located((By.CLASS_NAME, 'popup')))
    """ T27 Rejestracja użytkownika niepoprawne - nazwisko dwuczłonowe"""
    def test_register_person_T27(self):
        self.browser.get('http://localhost:8000/signup/person')
        time.sleep(10)
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[7]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[9]/button')      
        name.send_keys('Mateusz')
        surname.send_keys('Wicki-Morawski')
        email.send_keys('mateuszwicki1@mail.com')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik1')
        number.send_keys('123456789')
        button.submit()
        self.wait.until(EC.presence_of_element_located((By.CLASS_NAME, 'popup')))
    """ T28 Rejestracja użytkownika niepoprawne - bez podania numeru telefonu"""
    def test_register_person_T28(self):
        self.browser.get('http://localhost:8000/signup/person')
        time.sleep(10)
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[7]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[9]/button')      
        name.send_keys('Mateusz')
        surname.send_keys('Wicki')
        email.send_keys('mateuszwicki1@mail.com')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik1')
        number.send_keys('')
        button.submit()
        self.wait.until(EC.presence_of_element_located((By.CLASS_NAME, 'popup')))

    """ Testy Rejestracja Instytucja"""
    """ T7 Rejestracja instytucji poprawne """
    def test_register_institution_T7(self):
        self.browser.get('http://localhost:8000/signup/institution')
        time.sleep(10)
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        category= self.browser.find_element_by_xpath('//html/body/div/div/div/div/form/div[7]/select')
        profil=self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[8]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[10]/button')   
        name.send_keys('Akademia Pływania')
        email.send_keys('mateuszwicki1@gmail.com')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik1')
        number.send_keys('123456789')
        for option in category.find_elements_by_tag_name('option'):
            if option.text == 'Klub sportowy':
                option.click()
        profil.send_keys('Pływanie')
        button.submit()
        self.wait.until(EC.presence_of_element_located((By.CLASS_NAME, 'popup')))
    
    """ T8 Rejestracja instytucji niepoprawne - brak podania nazwy instytucji """
    def test_register_institution_T8(self):
        self.browser.get('http://localhost:8000/signup/institution')
        time.sleep(10)
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        category= self.browser.find_element_by_xpath('//html/body/div/div/div/div/form/div[7]/select')
        profil=self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[8]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[10]/button')   
        name.send_keys('')
        email.send_keys('mateuszwicki1@gmail.com')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik1')
        number.send_keys('123456789')
        for option in category.find_elements_by_tag_name('option'):
            if option.text == 'Klub sportowy':
                option.click()
        profil.send_keys('Pływanie')
        button.submit()
        self.wait.until(EC.presence_of_element_located((By.CLASS_NAME, 'popup')))   
    """ T9 Rejestracja instytucji niepoprawne -  """ 
    def test_register_institution_T9(self):
        self.browser.get('http://localhost:8000/signup/institution')
        time.sleep(10)
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        category= self.browser.find_element_by_xpath('//html/body/div/div/div/div/form/div[7]/select')
        profil=self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[8]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[10]/button')   
        name.send_keys('Akademia Pływania')
        email.send_keys('mateuszwicki1@gmail.com')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik2')
        number.send_keys('123456789')
        for option in category.find_elements_by_tag_name('option'):
            if option.text == 'Klub sportowy':
                option.click()
        profil.send_keys('Pływanie')
        self.browser.execute_script("validate()")
        self.wait.until(EC.presence_of_element_located((By.CLASS_NAME, 'popup')))

    """ T29 Rejestracja instytucji niepoprawne -  błędne podanie nazwy""" 
    def test_register_institution_T29(self):
        self.browser.get('http://localhost:8000/signup/institution')
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        category = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[7]/select')
        profil = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[8]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[10]/button')
        name.send_keys('A')
        email.send_keys('mateuszwicki1@gmail.com')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik1')
        number.send_keys('123456789')
        category.click()
        all_options = category.find_elements_by_tag_name("option")
        for option in all_options:
            if option.get_attribute("value") == "Klub sportowy":
                option.click()
        profil.send_keys('Pływanie')
        self.browser.execute_script("validate()")
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div/div/div/div/form/div[2]/span/p"), "Podano niewłaściwą nazwę"))
        
    """ T30 Rejestracja instytucji niepoprawne -  brak maila""" 
    def test_register_institution_T30(self):
        self.browser.get('http://localhost:8000/signup/institution')
        time.sleep(10)
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        category= self.browser.find_element_by_xpath('//html/body/div/div/div/div/form/div[7]/select')
        profil=self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[8]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[10]/button')   
        name.send_keys('Akademia Pływania')
        email.send_keys('')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik1')
        number.send_keys('123456789')
        for option in category.find_elements_by_tag_name('option'):
            if option.text == 'Klub sportowy':
                option.click()
        profil.send_keys('Pływanie')
        self.browser.execute_script("validate()")
        self.wait.until(EC.presence_of_element_located((By.CLASS_NAME, 'popup')))
    """ T31 Rejestracja instytucji niepoprawne -  błędny mail bez znaku “@”""" 
    def test_register_institution_T31(self):
        self.browser.get('http://localhost:8000/signup/institution')
        time.sleep(10)
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        category= self.browser.find_element_by_xpath('//html/body/div/div/div/div/form/div[7]/select')
        profil=self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[8]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[10]/button')   
        name.send_keys('Akademia Pływania')
        email.send_keys('mateuszwicki1gmail.com')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik1')
        number.send_keys('123456789')
        for option in category.find_elements_by_tag_name('option'):
            if option.text == 'Klub sportowy':
                option.click()
        profil.send_keys('Pływanie')
        self.browser.execute_script("validate()")
        self.wait.until(EC.presence_of_element_located((By.CLASS_NAME, 'popup')))
    """ T32 Rejestracja instytucji niepoprawne -  błędny mail bez “.”""" 
    def test_register_institution_T32(self):
        self.browser.get('http://localhost:8000/signup/institution')
        time.sleep(10)
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        category= self.browser.find_element_by_xpath('//html/body/div/div/div/div/form/div[7]/select')
        profil=self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[8]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[10]/button')   
        name.send_keys('Akademia Pływania')
        email.send_keys('mateuszwicki1@gmailcom')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik1')
        number.send_keys('123456789')
        for option in category.find_elements_by_tag_name('option'):
            if option.text == 'Klub sportowy':
                option.click()
        profil.send_keys('Pływanie')
        self.browser.execute_script("validate()")
        self.wait.until(EC.presence_of_element_located((By.CLASS_NAME, 'popup')))
    """ T33 Rejestracja instytucji niepoprawne -  błędny mail bez “@….”""" 
    def test_register_institution_T33(self):
        self.browser.get('http://localhost:8000/signup/institution')
        time.sleep(10)
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        category= self.browser.find_element_by_xpath('//html/body/div/div/div/div/form/div[7]/select')
        profil=self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[8]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[10]/button')   
        name.send_keys('Akademia Pływania')
        email.send_keys('mateuszwicki1  ')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik1')
        number.send_keys('123456789')
        for option in category.find_elements_by_tag_name('option'):
            if option.text == 'Klub sportowy':
                option.click()
        profil.send_keys('Pływanie')
        self.browser.execute_script("validate()")
        self.wait.until(EC.presence_of_element_located((By.CLASS_NAME, 'popup')))
    """ T34 Rejestracja instytucji niepoprawne -  brak podania hasła""" 
    def test_register_institution_T34(self):
        self.browser.get('http://localhost:8000/signup/institution')
        time.sleep(10)
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        category= self.browser.find_element_by_xpath('//html/body/div/div/div/div/form/div[7]/select')
        profil=self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[8]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[10]/button')   
        name.send_keys('Akademia Pływania')
        email.send_keys('mateuszwicki1@gmail.com')
        password1.send_keys('')
        password2.send_keys('Dziennik1')
        number.send_keys('123456789')
        for option in category.find_elements_by_tag_name('option'):
            if option.text == 'Klub sportowy':
                option.click()
        profil.send_keys('Pływanie')
        self.browser.execute_script("validate()")
        self.wait.until(EC.presence_of_element_located((By.CLASS_NAME, 'popup')))
    """ T35 Rejestracja instytucji niepoprawne -  brak podania potwierdzenia hasła""" 
    def test_register_institution_T35(self):
        self.browser.get('http://localhost:8000/signup/institution')
        time.sleep(10)
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        category= self.browser.find_element_by_xpath('//html/body/div/div/div/div/form/div[7]/select')
        profil=self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[8]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[10]/button')   
        name.send_keys('Akademia Pływania')
        email.send_keys('mateuszwicki1@gmail.com')
        password1.send_keys('Dziennik1')
        password2.send_keys('')
        number.send_keys('123456789')
        for option in category.find_elements_by_tag_name('option'):
            if option.text == 'Klub sportowy':
                option.click()
        profil.send_keys('Pływanie')
        self.browser.execute_script("validate()")
        self.wait.until(EC.presence_of_element_located((By.CLASS_NAME, 'popup')))
    """ T36 Rejestracja instytucji niepoprawne -  podanie za krótkiego hasła""" 
    def test_register_institution_T36(self):
        self.browser.get('http://localhost:8000/signup/institution')
        time.sleep(10)
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        category= self.browser.find_element_by_xpath('//html/body/div/div/div/div/form/div[7]/select')
        profil=self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[8]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[10]/button')   
        name.send_keys('Akademia Pływania')
        email.send_keys('mateuszwicki1@gmail.com')
        password1.send_keys('Dzien1')
        password2.send_keys('Dzien1')
        number.send_keys('123456789')
        for option in category.find_elements_by_tag_name('option'):
            if option.text == 'Klub sportowy':
                option.click()
        profil.send_keys('Pływanie')
        self.browser.execute_script("validate()")
        self.wait.until(EC.presence_of_element_located((By.CLASS_NAME, 'popup')))
    """ T37 Rejestracja instytucji niepoprawne -  podanie błędnego hasła bez cyfry""" 
    def test_register_institution_T37(self):
        self.browser.get('http://localhost:8000/signup/institution')
        time.sleep(10)
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        category= self.browser.find_element_by_xpath('//html/body/div/div/div/div/form/div[7]/select')
        profil=self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[8]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[10]/button')   
        name.send_keys('Akademia Pływania')
        email.send_keys('mateuszwicki1@gmail.com')
        password1.send_keys('Dziennik')
        password2.send_keys('Dziennik')
        number.send_keys('123456789')
        for option in category.find_elements_by_tag_name('option'):
            if option.text == 'Klub sportowy':
                option.click()
        profil.send_keys('Pływanie')
        self.browser.execute_script("validate()")
        self.wait.until(EC.presence_of_element_located((By.CLASS_NAME, 'popup')))
    """ T38 Rejestracja instytucji niepoprawne -  podanie błędnego hasła bez dużej litery""" 
    def test_register_institution_T38(self):
        self.browser.get('http://localhost:8000/signup/institution')
        time.sleep(10)
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        category= self.browser.find_element_by_xpath('//html/body/div/div/div/div/form/div[7]/select')
        profil=self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[8]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[10]/button')   
        name.send_keys('Akademia Pływania')
        email.send_keys('mateuszwicki1@gmail.com')
        password1.send_keys('dziennik1')
        password2.send_keys('dziennik1')
        number.send_keys('123456789')
        for option in category.find_elements_by_tag_name('option'):
            if option.text == 'Klub sportowy':
                option.click()
        profil.send_keys('Pływanie')
        self.browser.execute_script("validate()")
        self.wait.until(EC.presence_of_element_located((By.CLASS_NAME, 'popup')))
    """ T39 Rejestracja instytucji niepoprawne -  podanie błędnego numeru telefonu""" 
    def test_register_institution_T39(self):
        self.browser.get('http://localhost:8000/signup/institution')
        time.sleep(10)
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        category= self.browser.find_element_by_xpath('//html/body/div/div/div/div/form/div[7]/select')
        profil=self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[8]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[10]/button')   
        name.send_keys('Akademia Pływania')
        email.send_keys('mateuszwicki1@gmail.com')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik1')
        number.send_keys('123456abc')
        for option in category.find_elements_by_tag_name('option'):
            if option.text == 'Klub sportowy':
                option.click()
        profil.send_keys('Pływanie')
        self.browser.execute_script("validate()")
        self.wait.until(EC.presence_of_element_located((By.CLASS_NAME, 'popup')))
    """ T40 Rejestracja instytucji niepoprawne -  podanie za krótkiego numeru telefonu"""
    def test_register_institution_T40(self):
        self.browser.get('http://localhost:8000/signup/institution')
        time.sleep(10)
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        category= self.browser.find_element_by_xpath('//html/body/div/div/div/div/form/div[7]/select')
        profil=self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[8]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[10]/button')   
        name.send_keys('Akademia Pływania')
        email.send_keys('mateuszwicki1@gmail.com')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik1')
        number.send_keys('12345678')
        for option in category.find_elements_by_tag_name('option'):
            if option.text == 'Klub sportowy':
                option.click()
        profil.send_keys('Pływanie')
        self.browser.execute_script("validate()")
        self.wait.until(EC.presence_of_element_located((By.CLASS_NAME, 'popup')))
    """ T41 Rejestracja instytucji niepoprawne -  podanie za długiego numeru telefonu""" 
    def test_register_institution_T41(self):
        self.browser.get('http://localhost:8000/signup/institution')
        time.sleep(10)
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        category= self.browser.find_element_by_xpath('//html/body/div/div/div/div/form/div[7]/select')
        profil=self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[8]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[10]/button')   
        name.send_keys('Akademia Pływania')
        email.send_keys('mateuszwicki1@gmail.com')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik1')
        number.send_keys('1234567890123456')
        for option in category.find_elements_by_tag_name('option'):
            if option.text == 'Klub sportowy':
                option.click()
        profil.send_keys('Pływanie')
        self.browser.execute_script("validate()")
        self.wait.until(EC.presence_of_element_located((By.CLASS_NAME, 'popup')))
    """ T42 Rejestracja instytucji niepoprawne -  bez podania numeru telefonu""" 
    def test_register_institution_T42(self):
        self.browser.get('http://localhost:8000/signup/institution')
        time.sleep(10)
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        category= self.browser.find_element_by_xpath('//html/body/div/div/div/div/form/div[7]/select')
        profil=self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[8]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[10]/button')   
        name.send_keys('Akademia Pływania')
        email.send_keys('mateuszwicki1@gmail.com')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik1')
        number.send_keys('')
        for option in category.find_elements_by_tag_name('option'):
            if option.text == 'Klub sportowy':
                option.click()
        profil.send_keys('Pływanie')
        self.browser.execute_script("validate()")
        self.wait.until(EC.presence_of_element_located((By.CLASS_NAME, 'popup')))
    """ T43 Rejestracja instytucji niepoprawne -  nie wybranie kategorii""" 
    def test_register_institution_T43(self):
        self.browser.get('http://localhost:8000/signup/institution')
        time.sleep(10)
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        category= self.browser.find_element_by_xpath('//html/body/div/div/div/div/form/div[7]/select')
        profil=self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[8]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[10]/button')   
        name.send_keys('Akademia Pływania')
        email.send_keys('mateuszwicki1@gmail.com')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik1')
        number.send_keys('123456789')
        profil.send_keys('Pływanie')
        self.browser.execute_script("validate()")
        self.wait.until(EC.presence_of_element_located((By.CLASS_NAME, 'popup')))
    """ T44 Rejestracja instytucji niepoprawne -  brak podania specjalizacji""" 
    def test_register_institution_T44(self):
        self.browser.get('http://localhost:8000/signup/institution')
        time.sleep(10)
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        category= self.browser.find_element_by_xpath('//html/body/div/div/div/div/form/div[7]/select')
        profil=self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[8]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[10]/button')   
        name.send_keys('Akademia Pływania')
        email.send_keys('mateuszwicki1@gmail.com')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik1')
        number.send_keys('123456789')
        for option in category.find_elements_by_tag_name('option'):
            if option.text == 'Klub sportowy':
                option.click()
        profil.send_keys('')
        self.browser.execute_script("validate()")
        self.wait.until(EC.presence_of_element_located((By.CLASS_NAME, 'popup')))
    """ T45 Rejestracja instytucji niepoprawne -  błędne podanie specjalizacji""" 
    def test_register_institution_T45(self):
        self.browser.get('http://localhost:8000/signup/institution')
        time.sleep(10)
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        category= self.browser.find_element_by_xpath('//html/body/div/div/div/div/form/div[7]/select')
        profil=self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[8]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[10]/button')   
        name.send_keys('Akademia Pływania')
        email.send_keys('mateuszwicki1@gmail.com')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik1')
        number.send_keys('123456789')
        for option in category.find_elements_by_tag_name('option'):
            if option.text == 'Klub sportowy':
                option.click()
        profil.send_keys('Pływanie1')
        self.browser.execute_script("validate()")
        self.wait.until(EC.presence_of_element_located((By.CLASS_NAME, 'popup')))
        

    def test_labourer_activites_view_T10(self):
        self.browser.get('http://localhost:8000/login')
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')    
        password.send_keys('PT0LUFNB')
        login.send_keys('traczu456789@gmail.com')
        time.sleep(2)
        button.submit()
        time.sleep(2)
        # EC.presence_of_element_located muszą w sodku być nawiasy bo inaczej widzi jako 3 argumenty
        self.wait.until(EC.presence_of_element_located((By.CLASS_NAME,'activity')))

    def test_labourer_notifiacation_view_T11(self):
        self.browser.get('http://localhost:8000/login')
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')  
        password.send_keys('PT0LUFNB')
        login.send_keys('traczu456789@gmail.com')
        time.sleep(1)
        button.submit()
        time.sleep(1)
        #szukamy activity 
        activity = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/div/span[8]')
        #klikamy w activity
        activity.click()  
        time.sleep(1)
        #tutaj szukamy ikonki z włączeniem powiadomień
        set_assignment_button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/div[1]/form/button[1]')
        set_assignment_button.click()
        time.sleep(1)
        #jesli znajdzie message o tym ze poprawnie ustawiono przypomnienie i znajdzie ta wiadomość to przejdzie
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH,'/html/body/div[1]/div/div/div/font'),'Włączono powiadomienie o zajęciach'))
 
    def test_send_message_to_employee_T12(self):
        self.browser.get('http://localhost:8000/login')
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')  
        password.send_keys('PT0LUFNB')
        login.send_keys('traczu456789@gmail.com')
        time.sleep(1)
        button.submit()
        time.sleep(1)
        # szukamy activity 
        activity = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/div/span[8]')
        # klikamy w activity
        activity.click()
        time.sleep(1)
        # tutaj szukamy ikonki z wlaczeniem pwoiadomien
        set_assignment_button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/div[1]/form/button[2]')
        set_assignment_button.click()
        time.sleep(1)
        # najpierw nalezy kliknac na textarea zeby sfokusowac element 
        self.browser.find_element_by_xpath('/html/body/div/div/div/div/div[2]/form/textarea').click()
        # teraz przekazujemy wiadomosc
        self.browser.find_element_by_xpath('/html/body/div/div/div/div/div[2]/form/textarea').send_keys('Testowa wiadomość')
        # klikamy 1 potwierdzenie
        self.browser.find_element_by_xpath('/html/body/div/div/div/div/div[2]/form/button[2]').click()
        # klikamy 2 potwierdzenie
        self.browser.find_element_by_xpath('/html/body/div/div/div/div/div[3]/form/button[2]').click()
        time.sleep(1)
        # Teraz szukamy elementu z tekstem
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH,'/html/body/div[1]/div/div/div/font'),'Wysłano powiadomienie o odwołaniu zajęć'))
