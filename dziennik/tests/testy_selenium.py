from selenium import webdriver
from django.contrib.staticfiles.testing import StaticLiveServerTestCase
from django.urls import reverse , resolve
from django.test import TestCase , Client
from dziennik.models import User,UserManager
from dziennik.forms import RegisterForm
import time
from webdriver_manager.chrome import ChromeDriverManager
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.common.by import By
import re
from datetime import datetime
from datetime import timedelta
<<<<<<< HEAD
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.common.keys import Keys
=======
>>>>>>> 8ce13c0031744ee087c5634781b0293678e54a27
# Ważne!!!!!!!!!!!!!!!!!!!!!
# każdy test musi zaczynać się od słowa kluczowego 'test' inaczej się wysypie :)
# komenda na odpalenie wszystkich testów py manage.py test
# komenda na odpalenie konkretnego testu np. py .\manage.py test dziennik.tests.testy_selenium.TestProject.test_login
# RĘCZNE TESTY:
# T10, T91,T96, T97, T98, T105 - T113, T121, T122, T123, T129, T130, T131, T132, T155, T156, T157, T159
# T135 - nie może być wykonany ponieważ pole jest wstępnie wypełnione i nie może zostać wyczyszczone
# yyyyyyyyyyyYYYYYYYYYYYYYYYYYYYYYYyyyyyyyyyyyyyyyyyyyyyyyyyyyyYYYYYYYYYYYY


class TestProject(StaticLiveServerTestCase):
    def setUp(self):
        self.browser = webdriver.Chrome(ChromeDriverManager().install())
        self.wait = WebDriverWait(self.browser, 10)
        self.action = ActionChains(self.browser)
    """ Testy Logowania Uzytkownik"""
    """ T1 Logowanie poprawne"""
    def test_T1(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Marik1234')
        login.send_keys('dziennik@mail.com')
        button.submit()
        self.wait.until(EC.url_to_be('http://localhost:8000/'))
        self.browser.close()

    """ T2 Logowanie niepoprawne - brak hasła"""
    def test_T2(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')    
        password.send_keys('')
        login.send_keys('dziennik@mail.com')
        button.submit()
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div/div/div/div/form/div[6]/p"), "Nazwa użytkowania, bądź hasło się nie zgadzją. Spróbuj ponownie"))
        self.browser.close()

    """ T3 Logowanie niepoprawne - błędne hasło"""
    def test_T3(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('blednehaslo')
        login.send_keys('dziennik@mail.com')
        button.submit()
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div/div/div/div/form/div[6]/p"), "hasło się nie zgadzją."))
        self.browser.close()

    """ Testy Rejestracja Uzytkownik"""
    """ T4 Rejestracja użytkownika poprawne"""
    def test_T4(self):
        self.browser.get('http://localhost:8000/signup/person')
        self.browser.maximize_window()
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[7]/p/input')     
        name.send_keys('Mateusz')
        surname.send_keys('Wicki')
        email.send_keys('mateuszwicki1@gmail.com')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik1')
        number.send_keys('123456789')
        self.browser.find_element_by_tag_name('button').click()   
        self.wait.until(EC.presence_of_element_located((By.CLASS_NAME, 'popup')))
        self.browser.close()

    """ T5 Rejestracja użytkownika niepoprawne - niezgadzające się hasła"""
    def test_T5(self):
        self.browser.get('http://localhost:8000/signup/person')
        self.browser.maximize_window()
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[7]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[8]/button')      
        name.send_keys('Mateusz')
        surname.send_keys('Wicki')
        email.send_keys('mateuszwicki1@mail.com')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik2')
        number.send_keys('123456789')
        self.browser.execute_script("validate()")
        time.sleep(2)
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div/div/div/div/form/div[6]/span/p"), "Podane hasła się nie zgdzają"))
        self.browser.close()

    """ T6 Rejestracja użytkownika niepoprawne - brak podania hasła"""
    def test_T6(self):
        self.browser.get('http://localhost:8000/signup/person')
        self.browser.maximize_window()
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[7]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[8]/button')      
        name.send_keys('Mateusz')
        surname.send_keys('Wicki')
        email.send_keys('mateuszwicki1@mail.com')
        password1.send_keys('')
        password2.send_keys('')
        number.send_keys('123456789')
        self.browser.execute_script("validate()")
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div/div/div/div/form/div[5]/span/p"), "Nie podano hasła"))
        self.browser.close()  

    """ T7 Rejestracja instytucji poprawne"""
    def test_T7(self):
        self.browser.get('http://localhost:8000/signup/institution')
        self.browser.maximize_window()
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        category = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[7]/select')
        profil = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[8]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[9]/button')   
        name.send_keys('Akademia Pływania')
        email.send_keys('mateuszwicki1@gmail.com')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik1')
        number.send_keys('')
        category.click()
        all_options = category.find_elements_by_tag_name("option")
        for option in all_options:
            if option.get_attribute("value") == "Klub sportowy":
                option.click()
        profil.send_keys('Pływanie')
        number.send_keys('123456789')
        self.browser.find_element_by_tag_name('button').submit()   
        self.wait.until(EC.presence_of_element_located((By.CLASS_NAME, 'popup')))
        self.browser.close()   

    """ T8 Rejestracja instytucji niepoprawne - brak podania nazwy instytucji"""
    def test_T8(self):
        self.browser.get('http://localhost:8000/signup/institution')
        self.browser.maximize_window()
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        category = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[7]/select')
        profil = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[8]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[9]/button')   
        name.send_keys('')
        email.send_keys('mateuszwicki1@gmail.com')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik1')
        number.send_keys('')
        category.click()
        all_options = category.find_elements_by_tag_name("option")
        for option in all_options:
            if option.get_attribute("value") == "Klub sportowy":
                option.click()
        profil.send_keys('Pływanie')
        number.send_keys('123456789')
        self.browser.execute_script("validate()")
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div/div/div/div/form/div[2]/span/p"), "Nie podano nazwy"))
        self.browser.close()  

    """ T9 Rejestracja instytucji niepoprawne - błędnie podane hasła"""
    def test_T9(self):
        self.browser.get('http://localhost:8000/signup/institution')
        self.browser.maximize_window()
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        category = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[7]/select')
        profil = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[8]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[9]/button')   
        name.send_keys('Akademia Pływania')
        email.send_keys('mateuszwicki1@gmail.com')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik2')
        number.send_keys('')
        category.click()
        all_options = category.find_elements_by_tag_name("option")
        for option in all_options:
            if option.get_attribute("value") == "Klub sportowy":
                option.click()
        profil.send_keys('Pływanie')
        number.send_keys('123456789')
        self.browser.execute_script("validate()")
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div/div/div/div/form/div[5]/span/p"), "Podane hasła się nie zgdzają"))
        self.browser.close()  

    """ T10 Podgląd planu zajęć pracownika poprawne"""
    def test_T10(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')    
        password.send_keys('IAL0O1DQ')
        login.send_keys('pracownik@mail.com')
        time.sleep(2)
        button.submit()
        time.sleep(2)
        # EC.presence_of_element_located muszą w sodku być nawiasy bo inaczej widzi jako 3 argumenty
        self.wait.until(EC.presence_of_element_located((By.CLASS_NAME,'activity')))
        self.browser.close()

    #zmienić zajęcia po każdym dniu ponieważ zawsze są zczytywane dla konkretknego dnia
    """ T11 Ustawienie przypomnień pracownika poprawne"""
    def test_T11(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')  
        password.send_keys('IAL0O1DQ')
        login.send_keys('pracownik@mail.com')
        time.sleep(1)
        button.submit()
        time.sleep(1)
        #szukamy activity 
        time.sleep(1)
        activity = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div[2]/span[9]')
        #klikamy w activity
        activity.click()  
        time.sleep(1)
        #tutaj szukamy ikonki z włączeniem powiadomień
        set_assignment_button = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div/div[2]/div[1]/button')
        set_assignment_button.click()
        time.sleep(1)
        #jesli znajdzie message o tym ze poprawnie ustawiono przypomnienie i znajdzie ta wiadomość to przejdzie
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH,'/html/body/div[1]/div/div/div/font'),'Włączono powiadomienie o zajęciach'))
        self.browser.close()

    """T12 Interakcja związana z aktywnością pracownika poprawne"""
    def test_T12(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')  
        password.send_keys('IAL0O1DQ')
        login.send_keys('pracownik@mail.com')
        time.sleep(1)
        button.submit()
        time.sleep(1)
        # szukamy activity 
        activity = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div[2]/span[9]')
        # klikamy w activity
        activity.click()
        time.sleep(1)
        # tutaj szukamy ikonki z wlaczeniem pwoiadomien
        set_assignment_button = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div/div[1]/div[1]/button')
        set_assignment_button.click()
        time.sleep(1)
        # najpierw nalezy kliknac na textarea zeby sfokusowac element 
        self.browser.find_element_by_xpath('/html/body/div/div/div/div/div[2]/form/textarea').click()
        # teraz przekazujemy wiadomosc
        self.browser.find_element_by_xpath('/html/body/div/div/div/div/div[2]/form/textarea').send_keys('Testowa wiadomość')
        # klikamy 1 potwierdzenie
        self.browser.find_element_by_xpath('/html/body/div/div/div/div/div[2]/form/button[2]').click()
        # klikamy 2 potwierdzenie
        self.browser.find_element_by_xpath('/html/body/div/div/div/div/div[3]/form/button[2]').click()
        time.sleep(1)
        # Teraz szukamy elementu z tekstem
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH,'/html/body/div[1]/div/div/div/font'),'Wysłano powiadomienie o odwołaniu zajęć'))
        self.browser.close()

    """ T13 Rejestracja użytkownika niepoprawne - brak imienia"""
    def test_T13(self):
        self.browser.get('http://localhost:8000/signup/person')
        self.browser.maximize_window()
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[7]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[8]/button')      
        name.send_keys('')
        surname.send_keys('Wicki')
        email.send_keys('mateuszwicki1@mail.com')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik1')
        number.send_keys('123456789')
        self.browser.execute_script("validate()")
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div/div/div/div/form/div[2]/span/p"), "Nie podano imienia"))
        self.browser.close()  

    """ T14 Rejestracja użytkownika niepoprawne - błędne imię"""
    def test_T14(self):
        self.browser.get('http://localhost:8000/signup/person')
        self.browser.maximize_window()
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[7]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[8]/button')      
        name.send_keys('Mateusz1')
        surname.send_keys('Wicki')
        email.send_keys('mateuszwicki1@mail.com')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik1')
        number.send_keys('123456789')
        self.browser.execute_script("validate()")
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div/div/div/div/form/div[2]/span/p"), "Podano niewłaściwe imie"))
        self.browser.close()  

    """ T15 Rejestracja użytkownika niepoprawne - brak nazwiska"""
    def test_T15(self):
        self.browser.get('http://localhost:8000/signup/person')
        self.browser.maximize_window()
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[7]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[8]/button')      
        name.send_keys('Mateusz')
        surname.send_keys('')
        email.send_keys('mateuszwicki1@mail.com')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik1')
        number.send_keys('123456789')
        self.browser.execute_script("validate()")
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div/div/div/div/form/div[3]/span/p"), "Nie podano nazwiska"))
        self.browser.close() 

    """ T16 Rejestracja użytkownika niepoprawne - błędne nazwisko"""
    def test_T16(self):
        self.browser.get('http://localhost:8000/signup/person')
        self.browser.maximize_window()
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[7]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[8]/button')      
        name.send_keys('Mateusz')
        surname.send_keys('Wicki1')
        email.send_keys('mateuszwicki1@mail.com')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik1')
        number.send_keys('123456789')
        self.browser.execute_script("validate()")
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div/div/div/div/form/div[3]/span/p"), "Podano niewłaściwe nazwisko"))
        self.browser.close() 

    """ T17 Rejestracja użytkownika niepoprawne - brak maila"""
    def test_T17(self):
        self.browser.get('http://localhost:8000/signup/person')
        self.browser.maximize_window()
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[7]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[8]/button')      
        name.send_keys('Mateusz')
        surname.send_keys('Wicki')
        email.send_keys('')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik1')
        number.send_keys('123456789')
        self.browser.execute_script("validate()")
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div/div/div/div/form/div[4]/span/p"), "Nie podano maila"))
        self.browser.close() 

    """ T18 Rejestracja użytkownika niepoprawne - brak maila"""
    def test_T18(self):
        self.browser.get('http://localhost:8000/signup/person')
        self.browser.maximize_window()
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[7]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[8]/button')      
        name.send_keys('Mateusz')
        surname.send_keys('Wicki')
        email.send_keys('mateuszwicki1gmail.com')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik1')
        number.send_keys('123456789')
        self.browser.execute_script("validate()")
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div/div/div/div/form/div[4]/span/p"), "Podany mail nie jest prawidłowy"))
        self.browser.close() 

    """ T19 Rejestracja użytkownika niepoprawne - błędny mail bez ."""
    def test_T19(self):
        self.browser.get('http://localhost:8000/signup/person')
        self.browser.maximize_window()
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[7]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[8]/button')      
        name.send_keys('Mateusz')
        surname.send_keys('Wicki')
        email.send_keys('mateuszwicki1@gmailcom')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik1')
        number.send_keys('123456789')
        self.browser.execute_script("validate()")
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div/div/div/div/form/div[4]/span/p"), "Podany mail jest nieprawidłowy"))
        self.browser.close() 

    """ T20 Rejestracja użytkownika niepoprawne - błędny mail bez “@….”"""
    def test_T20(self):
        self.browser.get('http://localhost:8000/signup/person')
        self.browser.maximize_window()
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[7]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[8]/button')      
        name.send_keys('Mateusz')
        surname.send_keys('Wicki')
        email.send_keys('mateuszwicki1')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik1')
        number.send_keys('123456789')
        self.browser.execute_script("validate()")
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div/div/div/div/form/div[4]/span/p"), "Podany mail nie jest prawidłowy"))
        self.browser.close() 

    """ T21 Rejestracja użytkownika niepoprawne - za krótkie hasło"""
    def test_T21(self):
        self.browser.get('http://localhost:8000/signup/person')
        self.browser.maximize_window()
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[7]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[8]/button')      
        name.send_keys('Mateusz')
        surname.send_keys('Wicki')
        email.send_keys('mateuszwicki1@gmail.com')
        password1.send_keys('Dzie1')
        password2.send_keys('Dzie1')
        number.send_keys('123456789')
        self.browser.execute_script("validate()")
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div/div/div/div/form/div[5]/span/p"), "Podane hasło jest nieprawidłowe"))
        self.browser.close() 

    """ T22 Rejestracja użytkownika niepoprawne - hasło bez cyfry"""
    def test_T22(self):
        self.browser.get('http://localhost:8000/signup/person')
        self.browser.maximize_window()
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[7]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[8]/button')      
        name.send_keys('Mateusz')
        surname.send_keys('Wicki')
        email.send_keys('mateuszwicki1@gmail.com')
        password1.send_keys('Dziennik')
        password2.send_keys('Dziennik')
        number.send_keys('123456789')
        self.browser.execute_script("validate()")
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div/div/div/div/form/div[5]/span/p"), "Podane hasło jest nieprawidłowe"))
        self.browser.close() 

    """ T23 Rejestracja użytkownika niepoprawne - hasło bez dużej litery"""
    def test_T23(self):
        self.browser.get('http://localhost:8000/signup/person')
        self.browser.maximize_window()
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[7]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[8]/button')      
        name.send_keys('Mateusz')
        surname.send_keys('Wicki')
        email.send_keys('mateuszwicki1@gmail.com')
        password1.send_keys('dziennik1')
        password2.send_keys('dziennik1')
        number.send_keys('123456789')
        self.browser.execute_script("validate()")
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div/div/div/div/form/div[5]/span/p"), "Podane hasło jest nieprawidłowe"))
        self.browser.close() 

    """ T24 Rejestracja użytkownika niepoprawne - błędny numer telefonu"""
    def test_T24(self):
        self.browser.get('http://localhost:8000/signup/person')
        self.browser.maximize_window()
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[7]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[8]/button')      
        name.send_keys('Mateusz')
        surname.send_keys('Wicki')
        email.send_keys('mateuszwicki1@gmail.com')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik1')
        number.send_keys('123456abc')
        self.browser.execute_script("validate()")
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div/div/div/div/form/div[7]/span/p"), "Podany nr telefonu nie jest prawidłowy"))
        self.browser.close() 

    """ T25 Rejestracja użytkownika niepoprawne - za krótki numer telefonu"""
    def test_T25(self):
        self.browser.get('http://localhost:8000/signup/person')
        self.browser.maximize_window()
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[7]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[8]/button')      
        name.send_keys('Mateusz')
        surname.send_keys('Wicki')
        email.send_keys('mateuszwicki1@gmail.com')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik1')
        number.send_keys('12345678')
        self.browser.execute_script("validate()")
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div/div/div/div/form/div[7]/span/p"), "Podany nr telefonu nie jest prawidłowy"))
        self.browser.close() 

    """ T26 Rejestracja użytkownika niepoprawne - za długi numer telefonu"""
    def test_T26(self):
        self.browser.get('http://localhost:8000/signup/person')
        self.browser.maximize_window()
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[7]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[8]/button')      
        name.send_keys('Mateusz')
        surname.send_keys('Wicki')
        email.send_keys('mateuszwicki1@gmail.com')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik1')
        number.send_keys('1234567890123456')
        self.browser.execute_script("validate()")
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div/div/div/div/form/div[7]/span/p"), "Podany nr telefonu nie jest prawidłowy"))
        self.browser.close() 

    """ T27 Rejestracja użytkownika poprawne - nazwisko dwuczłonowe"""
    def test_T27(self):
        self.browser.get('http://localhost:8000/signup/person')
        self.browser.maximize_window()
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[7]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[8]/button')      
        name.send_keys('Mateusz')
        surname.send_keys('Wicki-Morawski')
        email.send_keys('mateuszwicki1@gmail.com')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik1')
        number.send_keys('123456789')
        time.sleep(5)
        self.browser.find_element_by_tag_name('button').submit()   
        time.sleep(5)
        self.wait.until(EC.presence_of_element_located((By.CLASS_NAME, 'popup')))
        self.browser.close() 

    """ T28 Rejestracja użytkownika poprawne - bez podania numeru telefonu"""
    def test_T28(self):
        self.browser.get('http://localhost:8000/signup/person')
        self.browser.maximize_window()
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[7]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[8]/button')      
        name.send_keys('Mateusz')
        surname.send_keys('Wicki')
        email.send_keys('mateuszwicki1@gmail.com')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik1')
        number.send_keys('')
        self.browser.find_element_by_tag_name('button').submit()   
        self.wait.until(EC.presence_of_element_located((By.CLASS_NAME, 'popup')))
        self.browser.close() 

    """ T29 Rejestracja instytucji niepoprawne - błędne podanie nazwy"""
    def test_T29(self):
        self.browser.get('http://localhost:8000/signup/institution')
        self.browser.maximize_window()
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        category = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[7]/select')
        profil = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[8]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[9]/button')   
        name.send_keys('A')
        email.send_keys('mateuszwicki1@gmail.com')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik1')
        number.send_keys('123456789')
        category.click()
        all_options = category.find_elements_by_tag_name("option")
        for option in all_options:
            if option.get_attribute("value") == "Klub sportowy":
                option.click()
        profil.send_keys('Pływanie')
        self.browser.execute_script("validate()")
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div/div/div/div/form/div[2]/span/p"), "Podano niewłaściwą nazwę"))
        self.browser.close() 

    """ T30 Rejestracja instytucji niepoprawne - brak maila"""
    def test_T30(self):
        self.browser.get('http://localhost:8000/signup/institution')
        self.browser.maximize_window()
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        category = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[7]/select')
        profil = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[8]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[9]/button')   
        name.send_keys('Akademia Pływania')
        email.send_keys('')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik1')
        number.send_keys('123456789')
        category.click()
        all_options = category.find_elements_by_tag_name("option")
        for option in all_options:
            if option.get_attribute("value") == "Klub sportowy":
                option.click()
        profil.send_keys('Pływanie')
        self.browser.execute_script("validate()")
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div/div/div/div/form/div[3]/span/p"), "Nie podano maila"))
        self.browser.close() 

    """ T31 Rejestracja instytucji niepoprawne - błędny mail bez znaku “@”"""
    def test_T31(self):
        self.browser.get('http://localhost:8000/signup/institution')
        self.browser.maximize_window()
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        category = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[7]/select')
        profil = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[8]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[9]/button')   
        name.send_keys('Akademia Pływania')
        email.send_keys('mateuszwicki1gmail.com')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik1')
        number.send_keys('123456789')
        category.click()
        all_options = category.find_elements_by_tag_name("option")
        for option in all_options:
            if option.get_attribute("value") == "Klub sportowy":
                option.click()
        profil.send_keys('Pływanie')
        self.browser.execute_script("validate()")
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div/div/div/div/form/div[3]/span/p"), "Podany mail nie jest prawidłowy"))
        self.browser.close() 

    """ T32 Rejestracja instytucji niepoprawne - błędny mail bez “.”"""
    def test_T32(self):
        self.browser.get('http://localhost:8000/signup/institution')
        self.browser.maximize_window()
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        category = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[7]/select')
        profil = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[8]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[9]/button')   
        name.send_keys('Akademia Pływania')
        email.send_keys('mateuszwicki1@gmailcom')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik1')
        number.send_keys('123456789')
        category.click()
        all_options = category.find_elements_by_tag_name("option")
        for option in all_options:
            if option.get_attribute("value") == "Klub sportowy":
                option.click()
        profil.send_keys('Pływanie')
        self.browser.execute_script("validate()")
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div/div/div/div/form/div[3]/span/p"), "Podany mail jest nieprawidłowy"))
        self.browser.close() 
    
    """ T33 Rejestracja instytucji niepoprawne -błędny mail bez “@….”"""
    def test_T33(self):
        self.browser.get('http://localhost:8000/signup/institution')
        self.browser.maximize_window()
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        category = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[7]/select')
        profil = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[8]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[9]/button')   
        name.send_keys('Akademia Pływania')
        email.send_keys('mateuszwicki1')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik1')
        number.send_keys('123456789')
        category.click()
        all_options = category.find_elements_by_tag_name("option")
        for option in all_options:
            if option.get_attribute("value") == "Klub sportowy":
                option.click()
        profil.send_keys('Pływanie')
        self.browser.execute_script("validate()")
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div/div/div/div/form/div[3]/span/p"), "Podany mail nie jest prawidłowy"))
        self.browser.close() 
              
    """ T34 Rejestracja instytucji niepoprawne - brak podania hasła"""
    def test_T34(self):
        self.browser.get('http://localhost:8000/signup/institution')
        self.browser.maximize_window()
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        category = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[7]/select')
        profil = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[8]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[9]/button')   
        name.send_keys('Akademia Pływania')
        email.send_keys('mateuszwicki1@gmail.com')
        password1.send_keys('')
        password2.send_keys('Dziennik1')
        number.send_keys('123456789')
        category.click()
        all_options = category.find_elements_by_tag_name("option")
        for option in all_options:
            if option.get_attribute("value") == "Klub sportowy":
                option.click()
        profil.send_keys('Pływanie')
        self.browser.execute_script("validate()")
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div/div/div/div/form/div[4]/span/p"), "Nie podano hasła"))
        self.browser.close() 
                     
    """ T35 Rejestracja instytucji niepoprawne - brak podania potwierdzenia hasła"""
    def test_T35(self):
        self.browser.get('http://localhost:8000/signup/institution')
        self.browser.maximize_window()
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        category = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[7]/select')
        profil = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[8]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[9]/button')   
        name.send_keys('Akademia Pływania')
        email.send_keys('mateuszwicki1@gmail.com')
        password1.send_keys('Dziennik1')
        password2.send_keys('')
        number.send_keys('123456789')
        category.click()
        all_options = category.find_elements_by_tag_name("option")
        for option in all_options:
            if option.get_attribute("value") == "Klub sportowy":
                option.click()
        profil.send_keys('Pływanie')
        self.browser.execute_script("validate()")
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div/div/div/div/form/div[5]/span/p"), "Nie podano hasła ponownie"))
        self.browser.close()  
                             
    """ T36 Rejestracja instytucji niepoprawne - podanie za krótkiego hasła"""
    def test_T36(self):
        self.browser.get('http://localhost:8000/signup/institution')
        self.browser.maximize_window()
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        category = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[7]/select')
        profil = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[8]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[9]/button')   
        name.send_keys('Akademia Pływania')
        email.send_keys('mateuszwicki1@gmail.com')
        password1.send_keys('Dzien1')
        password2.send_keys('Dzien1')
        number.send_keys('123456789')
        category.click()
        all_options = category.find_elements_by_tag_name("option")
        for option in all_options:
            if option.get_attribute("value") == "Klub sportowy":
                option.click()
        profil.send_keys('Pływanie')
        self.browser.execute_script("validate()")
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div/div/div/div/form/div[4]/span/p"), "Podane hasło jest nieprawidłowe"))
        self.browser.close()  
                                     
    """ T37 Rejestracja instytucji niepoprawne - podanie błędnego hasła bez cyfry"""
    def test_T37(self):
        self.browser.get('http://localhost:8000/signup/institution')
        self.browser.maximize_window()
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        category = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[7]/select')
        profil = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[8]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[9]/button')   
        name.send_keys('Akademia Pływania')
        email.send_keys('mateuszwicki1@gmail.com')
        password1.send_keys('Dziennik')
        password2.send_keys('Dziennik')
        number.send_keys('123456789')
        category.click()
        all_options = category.find_elements_by_tag_name("option")
        for option in all_options:
            if option.get_attribute("value") == "Klub sportowy":
                option.click()
        profil.send_keys('Pływanie')
        self.browser.execute_script("validate()")
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div/div/div/div/form/div[4]/span/p"), "Podane hasło jest nieprawidłowe"))
        self.browser.close()  
                                      
    """ T38 Rejestracja instytucji niepoprawne - podanie błędnego hasła bez dużej litery"""
    def test_T38(self):
        self.browser.get('http://localhost:8000/signup/institution')
        self.browser.maximize_window()
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        category = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[7]/select')
        profil = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[8]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[9]/button')   
        name.send_keys('Akademia Pływania')
        email.send_keys('mateuszwicki1@gmail.com')
        password1.send_keys('dziennik1')
        password2.send_keys('dziennik1')
        number.send_keys('123456789')
        category.click()
        all_options = category.find_elements_by_tag_name("option")
        for option in all_options:
            if option.get_attribute("value") == "Klub sportowy":
                option.click()
        profil.send_keys('Pływanie')
        self.browser.execute_script("validate()")
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div/div/div/div/form/div[4]/span/p"), "Podane hasło jest nieprawidłowe"))
        self.browser.close()         
                                       
    """ T39 Rejestracja instytucji niepoprawne - podanie błędnego numeru telefonu"""
    def test_T39(self):
        self.browser.get('http://localhost:8000/signup/institution')
        self.browser.maximize_window()
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        category = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[7]/select')
        profil = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[8]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[9]/button')   
        name.send_keys('Akademia Pływania')
        email.send_keys('mateuszwicki1@gmail.com')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik1')
        number.send_keys('123456abc')
        category.click()
        all_options = category.find_elements_by_tag_name("option")
        for option in all_options:
            if option.get_attribute("value") == "Klub sportowy":
                option.click()
        profil.send_keys('Pływanie')
        self.browser.execute_script("validate()")
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div/div/div/div/form/div[6]/span/p"), "Podany nr telefonu nie jest prawidłowy"))
        self.browser.close()         
                                        
    """ T40 Rejestracja instytucji niepoprawne - podanie za krótkiego numeru telefonu"""
    def test_T40(self):
        self.browser.get('http://localhost:8000/signup/institution')
        self.browser.maximize_window()
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        category = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[7]/select')
        profil = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[8]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[9]/button')   
        name.send_keys('Akademia Pływania')
        email.send_keys('mateuszwicki1@gmail.com')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik1')
        number.send_keys('12345678')
        category.click()
        all_options = category.find_elements_by_tag_name("option")
        for option in all_options:
            if option.get_attribute("value") == "Klub sportowy":
                option.click()
        profil.send_keys('Pływanie')
        self.browser.execute_script("validate()")
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div/div/div/div/form/div[6]/span/p"), "Podany nr telefonu nie jest prawidłowy"))
        self.browser.close()    
                                         
    """ T41 Rejestracja instytucji niepoprawne - podanie za długiego numeru telefonu"""
    def test_T41(self):
        self.browser.get('http://localhost:8000/signup/institution')
        self.browser.maximize_window()
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        category = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[7]/select')
        profil = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[8]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[9]/button')   
        name.send_keys('Akademia Pływania')
        email.send_keys('mateuszwicki1@gmail.com')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik1')
        number.send_keys('1234567890123456')
        category.click()
        all_options = category.find_elements_by_tag_name("option")
        for option in all_options:
            if option.get_attribute("value") == "Klub sportowy":
                option.click()
        profil.send_keys('Pływanie')
        self.browser.execute_script("validate()")
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div/div/div/div/form/div[6]/span/p"), "Podany nr telefonu nie jest prawidłowy"))
        self.browser.close()    

    """ T42 Rejestracja instytucji poprawne - bez podania numeru telefonu"""
    def test_T42(self):
        self.browser.get('http://localhost:8000/signup/institution')
        self.browser.maximize_window()
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        category = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[7]/select')
        profil = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[8]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[9]/button')   
        name.send_keys('Akademia Pływania')
        email.send_keys('mateuszwicki1@gmail.com')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik1')
        number.send_keys('')
        category.click()
        all_options = category.find_elements_by_tag_name("option")
        for option in all_options:
            if option.get_attribute("value") == "Klub sportowy":
                option.click()
        profil.send_keys('Pływanie')
        self.browser.find_element_by_tag_name('button').submit()   
        self.wait.until(EC.presence_of_element_located((By.CLASS_NAME, 'popup')))
        self.browser.close()                   

    """ T43 Rejestracja instytucji niepoprawne - nie wybranie kategorii"""
    def test_T43(self):
        self.browser.get('http://localhost:8000/signup/institution')
        self.browser.maximize_window()
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        category = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[7]/select')
        profil = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[8]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[9]/button')   
        name.send_keys('Akademia Pływania')
        email.send_keys('mateuszwicki1@gmail.com')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik1')
        number.send_keys('132456789')
        profil.send_keys('Pływanie')
        self.browser.execute_script("validate()")
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div/div/div/div/form/div[7]/span/p"), "Nie wybrano kategorii"))
        self.browser.close()    

    """ T44 Rejestracja instytucji niepoprawne - nie wybranie kategorii"""
    def test_T44(self):
        self.browser.get('http://localhost:8000/signup/institution')
        self.browser.maximize_window()
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        category = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[7]/select')
        profil = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[8]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[9]/button')   
        name.send_keys('Akademia Pływania')
        email.send_keys('mateuszwicki1@gmail.com')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik1')
        number.send_keys('132456789')
        category.click()
        all_options = category.find_elements_by_tag_name("option")
        for option in all_options:
            if option.get_attribute("value") == "Klub sportowy":
                option.click()
        self.browser.execute_script("validate()")
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div/div/div/div/form/div[8]/span/p"), "Nie podano profilu np. klub piłkarski, szkoła j. angielskiego"))
        self.browser.close()   

    """ T45 Rejestracja instytucji niepoprawne - błędne podanie specjalizacji"""
    def test_T45(self):
        self.browser.get('http://localhost:8000/signup/institution')
        self.browser.maximize_window()
        name = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[3]/p/input')
        password1 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/p/input')
        password2 = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[5]/p/input')
        number = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[6]/p/input')
        category = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[7]/select')
        profil = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[8]/p/input')
        button = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[9]/button')   
        name.send_keys('Akademia Pływania')
        email.send_keys('mateuszwicki1@gmail.com')
        password1.send_keys('Dziennik1')
        password2.send_keys('Dziennik1')
        number.send_keys('132456789')
        category.click()
        all_options = category.find_elements_by_tag_name("option")
        for option in all_options:
            if option.get_attribute("value") == "Klub sportowy":
                option.click()
        profil.send_keys('Pływanie1')
        self.browser.execute_script("validate()")
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div/div/div/div/form/div[8]/span/p"), "Podany profil jest nieprawidłowy"))
        self.browser.close()  
    """ T46 Interakcja związana z aktywnością pracownika niepoprawne - brak treści wiadomości """
    def test_T46(self):
<<<<<<< HEAD
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('VKEVM5W0')
        login.send_keys('employe@mail.com')
        button.submit()
        time.sleep(3)
        activity = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div[2]/span[8]')
        time.sleep(1)
        activity.click()
        time.sleep(3)
        message = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div/div[1]/div[1]/button')
        message.click()
        time.sleep(3)
        send = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[2]/form/button[2]')
        send.click()
        time.sleep(3)
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div[2]/div/div/div/div[2]/form/span[2]"), "Musisz podac terść wiadomości!"))
        self.browser.close()

    """ T47 Interakcja związana z aktywnością pracownika niepoprawne - za długa wiadomość """
    def test_T47(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('VKEVM5W0')
        login.send_keys('employe@mail.com')
        button.submit()
        time.sleep(1)
        activity = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div[2]/span[8]')
        activity.click()
        message = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div/div[1]/div[1]/button')
        message.click()
        time.sleep(3)
        text = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[2]/form/textarea')
        text.click()
        text.send_keys('Lorem ipsum dolor sit amet, consecteur adipiscing elit. Nullam ornare lectus id mi placerat suscipit. Nullam lobortis metus quis nibh sagittis euismod. Sed orci sapien, aliquam quis mi vel, posuere fermentum est. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin semper ligula quis eros. dodatkowe znaki')
        send = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[2]/form/button[2]')
        time.sleep(3)
        send.click()
        sendconfirm = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[3]/form/button[2]')
        time.sleep(3)
        sendconfirm.click()
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div[1]/div/div/div/font"), "Wysłano powiadomienie o odwołaniu zajęć"))
        self.browser.close()
    """ T48 Tworzenie zajęć poprawne"""
    def test_T48(self):
=======
>>>>>>> 8ce13c0031744ee087c5634781b0293678e54a27
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
<<<<<<< HEAD
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[1]/a')
        settings.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[1]/p/input')
        date = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[2]/p/input')
        start_h = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[3]/p/input')
        end_h = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[4]/p/input')
        periodicity = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[5]/select')
        employe = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[6]/select')
        pupil = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[7]/select')
        name.send_keys('Zajęcia synchroniczne')
        end_date = (datetime.now() + timedelta(days=1) ).strftime('%Y-%m-%d')
        date.send_keys(end_date)
        start_h.send_keys('14:00')
        end_h.send_keys('16:00')
        time.sleep(1)

        periodicity.click() 
        all_periodicity=periodicity.find_elements_by_tag_name("option")
        all_periodicity[1].click()

        employe.click() 
        all_options = employe.find_elements_by_tag_name("option")
        all_options[1].click()
        time.sleep(1)

        pupil.click()
        all_option = pupil.find_elements_by_tag_name("option")
        # Dziwnie działa dlatego zaznaczm na poczatku 2 opcje
        self.action.key_down(Keys.CONTROL)
        self.action.click(all_option[2])
        self.action.click(all_option[1])
        self.action.click(all_option[3])
        self.action.click(all_option[5])
        self.action.key_up(Keys.CONTROL).perform()

        time.sleep(1) 

        self.browser.find_element_by_xpath("/html/body/main/div[2]/div/div/form/div[9]/button").submit()   
        self.browser.close()   
 
    """ T49 Tworzenie zajęć niepoprawne - brak nazwy zajęć"""
    def test_T49(self):
=======
        password.send_keys('VKEVM5W0')
        login.send_keys('employe@mail.com')
        button.submit()
        time.sleep(1)
        activity = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/div[2]/span[8]')
        activity.click()
        message = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div/div[1]/div[1]/button')
        message.submit()
        time.sleep(3)
        text = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[2]/form/textarea')
        text.click()
        text.send_keys('Testowa wiadomość')
        send = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[3]/form/button[2]')
        time.sleep(3)
        send.submit()
        time.sleep(3)
        send.submit()
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div[1]/div/div/div/font"), "Wysłano wiadomość do prowadzącego"))
        self.browser.close()

    """ T47 Interakcja związana z aktywnością pracownika niepoprawne - za długa wiadomość """
    def test_T47(self):
>>>>>>> 8ce13c0031744ee087c5634781b0293678e54a27
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
<<<<<<< HEAD
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[1]/a')
        settings.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[1]/p/input')
        date = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[2]/p/input')
        start_h = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[3]/p/input')
        end_h = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[4]/p/input')
        periodicity = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[5]/select')
        employe = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[6]/select')
        pupil = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[7]/select')
        end_date = (datetime.now() + timedelta(days=1) ).strftime('%Y-%m-%d')
        date.send_keys(end_date)
        start_h.send_keys('14:00')
        end_h.send_keys('16:00')
        time.sleep(1)
        periodicity.click() 
        all_periodicity=periodicity.find_elements_by_tag_name("option")
        all_periodicity[1].click()
        employe.click()
        all_options = employe.find_elements_by_tag_name("option")
        all_options[1].click()
        time.sleep(1)
        pupil.click()
        all_option = pupil.find_elements_by_tag_name("option")

        # Dziwnie działa dlatego zaznaczm na poczatku 2 opcje
        self.action.key_down(Keys.CONTROL)
        self.action.click(all_option[2])
        self.action.click(all_option[1])
        self.action.click(all_option[3])
        self.action.click(all_option[5])
        self.action.key_up(Keys.CONTROL).perform()
        time.sleep(1)
        self.browser.execute_script("validate()")
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div[2]/div/div/form/div[1]/span/p"), "Nie podano nazwy"))
        self.browser.close()   
 
                
    """ T50 Tworzenie zajęć niepoprawne - podanie daty wcześniejszej """
    def test_T50(self):
=======
        password.send_keys('VKEVM5W0')
        login.send_keys('employe@mail.com')
        button.submit()
        time.sleep(1)
        activity = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/div[2]/span[8]')
        activity.click()
        message = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div/div[1]/div[1]/button')
        message.submit()
        time.sleep(3)
        text = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[2]/form/textarea')
        text.click()
        text.send_keys('Lorem ipsum dolor sit amet, consecteur adipiscing elit. Nullam ornare lectus id mi placerat suscipit. Nullam lobortis metus quis nibh sagittis euismod. Sed orci sapien, aliquam quis mi vel, posuere fermentum est. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin semper ligula quis eros.')
        send = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[3]/form/button[2]')
        time.sleep(3)
        send.submit()
        time.sleep(3)
        send.submit()
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div[1]/div/div/div/font"), "Wysłano wiadomość do prowadzącego"))
        self.browser.close()
    """ T48 Tworzenie zajęć poprawne"""
    def test_T48(self):
>>>>>>> 8ce13c0031744ee087c5634781b0293678e54a27
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[1]/a')
        settings.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[1]/p/input')
        date = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[2]/p/input')
        start_h = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[3]/p/input')
        end_h = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[4]/p/input')
        periodicity = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[5]/select')
        employe = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[6]/select')
        pupil = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[7]/select')
<<<<<<< HEAD
        end_date = (datetime.now() - timedelta(days=7) ).strftime('%Y-%m-%d')
        name.send_keys('Zajęcia synchroniczne')
        date.send_keys(end_date)
        start_h.send_keys('14:00')
        end_h.send_keys('16:00')
        time.sleep(1)
        periodicity.click() 
        all_periodicity=periodicity.find_elements_by_tag_name("option")
        all_periodicity[1].click()
        employe.click()
        all_options = employe.find_elements_by_tag_name("option")
        all_options[1].click()
        time.sleep(1)
        pupil.click()
        all_option = pupil.find_elements_by_tag_name("option")

        # Dziwnie działa dlatego zaznaczm na poczatku 2 opcje
        self.action.key_down(Keys.CONTROL)
        self.action.click(all_option[2])
        self.action.click(all_option[1])
        self.action.click(all_option[3])
        self.action.click(all_option[5])
        self.action.key_up(Keys.CONTROL).perform()
        time.sleep(1)
        self.browser.execute_script("validate()")
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div[2]/div/div/form/div[2]/span/p"), "Podana data jest nieprawidłowa"))
        self.browser.close()   
    """ T51 Tworzenie zajęć niepoprawne - podanie daty w złym formacie"""
    def test_T51(self):
=======
        name.send_keys('Zajęcia synchroniczne')
        end_date = (datetime.now() + timedelta(days=1) ).strftime('%Y-%m-%d')
        date.send_keys(end_date)
        start_h.send_keys('14:00')
        end_h.send_keys('16:00')
        employe.click()
        all_options = employe.find_elements_by_tag_name("option")
        all_options[0].click()
        pupil.click()
        all_options = pupil.find_elements_by_tag_name("option")
        i=0
        length=len(all_options)
        pupil_length=0
        all_options[0].click()
        
        """ 
        while(i<5):
            if (i %2 ==0 and pupil_length<3):
                all_options[i].click()
                pupil_length+1
            i+1
        """
        
        #self.browser.execute_script("validate()")
        
        #time.sleep(10)
        #self.wait.until(EC.presence_of_element_located((By.XPATH, "/html/body/div/div/div/div")))
        #self.wait.until(EC.presence_of_element_located((By.CLASS_NAME, 'popup')))
        self.browser.execute_script("validate()")
        #self.browser.find_element_by_tag_name('button').submit()   
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div/div/div/div/b[1]"), "Nazwa zajęć:"))
        time.sleep(10000)
        self.browser.close()   
 
    """ T49 Tworzenie zajęć niepoprawne - brak nazwy zajęć"""
    def test_T49(self):
>>>>>>> 8ce13c0031744ee087c5634781b0293678e54a27
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[1]/a')
        settings.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[1]/p/input')
        date = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[2]/p/input')
        start_h = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[3]/p/input')
        end_h = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[4]/p/input')
        periodicity = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[5]/select')
        employe = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[6]/select')
        pupil = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[7]/select')
<<<<<<< HEAD
        end_date = (datetime.now() + timedelta(days=1) ).strftime('%d-%m-%Y')
        name.send_keys('Zajęcia synchroniczne')
        date.send_keys(end_date)
        start_h.send_keys('14:00')
        end_h.send_keys('16:00')
        time.sleep(1)
        periodicity.click() 
        all_periodicity=periodicity.find_elements_by_tag_name("option")
        all_periodicity[1].click()
        employe.click()
        all_options = employe.find_elements_by_tag_name("option")
        all_options[1].click()
        time.sleep(1)
        pupil.click()
        all_option = pupil.find_elements_by_tag_name("option")

        # Dziwnie działa dlatego zaznaczm na poczatku 2 opcje
        self.action.key_down(Keys.CONTROL)
        self.action.click(all_option[2])
        self.action.click(all_option[1])
        self.action.click(all_option[3])
        self.action.click(all_option[5])
        self.action.key_up(Keys.CONTROL).perform()
        time.sleep(1)
        self.browser.execute_script("validate()")
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div[2]/div/div/form/div[2]/span/p"), "Podana data jest nieprawidłowa"))
        self.browser.close() 
    """ T52 Tworzenie zajęć niepoprawne - brak podania daty"""
    def test_T52(self):
=======
        name.send_keys('Zajęcia synchroniczne')
        end_date = (datetime.now() + timedelta(days=1) ).strftime('%Y-%m-%d')
        date.send_keys(end_date)
        start_h.send_keys('14:00')
        end_h.send_keys('16:00')
        employe.click()
        all_options = employe.find_elements_by_tag_name("option")
        all_options[0].click()
        pupil.click()
        all_options = pupil.find_elements_by_tag_name("option")
        i=0
        length=len(all_options)
        pupil_length=0
        all_options[0].click()
        """
        while(i<length):
            if (i %2 ==0 and pupil_length<3):
                all_options[i].click()
                pupil_length+1
            i+1
        """
        #self.browser.execute_script("validate()")
        #self.browser.find_element_by_tag_name('button').submit()   
        #time.sleep(10)
        #self.wait.until(EC.presence_of_element_located((By.XPATH, "/html/body/div/div/div/div")))
        #self.wait.until(EC.presence_of_element_located((By.CLASS_NAME, 'popup')))
        self.browser.close()
        self.browser.execute_script("validate()")
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div/div/div/div/b[1]"), "Nazwa zajęć:"))
        time.sleep(10000)
        self.browser.close()   
 
                
    """ T50 Tworzenie zajęć niepoprawne - podanie daty wcześniejszej """
    def test_T50(self):
>>>>>>> 8ce13c0031744ee087c5634781b0293678e54a27
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
<<<<<<< HEAD
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[1]/a')
        settings.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[1]/p/input')
        date = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[2]/p/input')
        start_h = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[3]/p/input')
        end_h = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[4]/p/input')
        periodicity = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[5]/select')
        employe = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[6]/select')
        pupil = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[7]/select')
        name.send_keys('Zajęcia synchroniczne')
        start_h.send_keys('14:00')
        end_h.send_keys('16:00')
        time.sleep(1)
        periodicity.click() 
        all_periodicity=periodicity.find_elements_by_tag_name("option")
        all_periodicity[1].click()
        employe.click()
        all_options = employe.find_elements_by_tag_name("option")
        all_options[1].click()
        time.sleep(1)
        pupil.click()
        all_option = pupil.find_elements_by_tag_name("option")

        # Dziwnie działa dlatego zaznaczm na poczatku 2 opcje
        self.action.key_down(Keys.CONTROL)
        self.action.click(all_option[2])
        self.action.click(all_option[1])
        self.action.click(all_option[3])
        self.action.click(all_option[5])
        self.action.key_up(Keys.CONTROL).perform()
        time.sleep(1)
        self.browser.execute_script("validate()")
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div[2]/div/div/form/div[2]/span/p"), "Nie podano daty zajęć"))
        self.browser.close() 
    """ T53 Tworzenie zajęć niepoprawne - brak podania godziny rozpoczęcia"""
    def test_T53(self):
=======
    """ T51 Tworzenie zajęć niepoprawne - podanie daty w złym formacie"""
    def test_T51(self):
>>>>>>> 8ce13c0031744ee087c5634781b0293678e54a27
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
<<<<<<< HEAD
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[1]/a')
        settings.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[1]/p/input')
        date = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[2]/p/input')
        start_h = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[3]/p/input')
        end_h = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[4]/p/input')
        periodicity = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[5]/select')
        employe = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[6]/select')
        pupil = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[7]/select')
        end_date = (datetime.now() + timedelta(days=1) ).strftime('%Y-%m-%d')
        name.send_keys('Zajęcia synchroniczne')
        date.send_keys(end_date)
        end_h.send_keys('16:00')
        time.sleep(1)
        periodicity.click() 
        all_periodicity=periodicity.find_elements_by_tag_name("option")
        all_periodicity[1].click()
        employe.click()
        all_options = employe.find_elements_by_tag_name("option")
        all_options[1].click()
        time.sleep(1)
        pupil.click()
        all_option = pupil.find_elements_by_tag_name("option")

        # Dziwnie działa dlatego zaznaczm na poczatku 2 opcje
        self.action.key_down(Keys.CONTROL)
        self.action.click(all_option[2])
        self.action.click(all_option[1])
        self.action.click(all_option[3])
        self.action.click(all_option[5])
        self.action.key_up(Keys.CONTROL).perform()
        time.sleep(1)
        self.browser.execute_script("validate()")
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div[2]/div/div/form/div[3]/span/p"), "Nie podano godziny rozpoczęcia"))
        self.browser.close() 
    """ T54 Tworzenie zajęć niepoprawne - brak podania godziny zakończenia"""
    def test_T54(self):
=======
    """ T52 Tworzenie zajęć niepoprawne - brak podania daty"""
    def test_T52(self):
>>>>>>> 8ce13c0031744ee087c5634781b0293678e54a27
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
<<<<<<< HEAD
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[1]/a')
        settings.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[1]/p/input')
        date = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[2]/p/input')
        start_h = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[3]/p/input')
        end_h = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[4]/p/input')
        periodicity = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[5]/select')
        employe = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[6]/select')
        pupil = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[7]/select')
        end_date = (datetime.now() + timedelta(days=1) ).strftime('%Y-%m-%d')
        name.send_keys('Zajęcia synchroniczne')
        date.send_keys(end_date)
        start_h.send_keys('14:00')
        time.sleep(1)
        periodicity.click() 
        all_periodicity=periodicity.find_elements_by_tag_name("option")
        all_periodicity[1].click()
        employe.click()
        all_options = employe.find_elements_by_tag_name("option")
        all_options[1].click()
        time.sleep(1)
        pupil.click()
        all_option = pupil.find_elements_by_tag_name("option")

        # Dziwnie działa dlatego zaznaczm na poczatku 2 opcje
        self.action.key_down(Keys.CONTROL)
        self.action.click(all_option[2])
        self.action.click(all_option[1])
        self.action.click(all_option[3])
        self.action.click(all_option[5])
        self.action.key_up(Keys.CONTROL).perform()
        time.sleep(1)
        self.browser.execute_script("validate()")
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div[2]/div/div/form/div[4]/span/p"), "Nie podano godziny zakończenia"))
        self.browser.close() 
    """ T55 Tworzenie zajęć niepoprawne - błędna data zajęć"""
    def test_T55(self):
=======
    """ T53 Tworzenie zajęć niepoprawne - brak podania godziny rozpoczęcia"""
    def test_T53(self):
>>>>>>> 8ce13c0031744ee087c5634781b0293678e54a27
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
<<<<<<< HEAD
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[1]/a')
        settings.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[1]/p/input')
        date = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[2]/p/input')
        start_h = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[3]/p/input')
        end_h = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[4]/p/input')
        periodicity = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[5]/select')
        employe = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[6]/select')
        pupil = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[7]/select')
        name.send_keys('Zajęcia synchroniczne')
        date.send_keys('abcdefg')
        start_h.send_keys('14:00')
        end_h.send_keys('16:00')
        time.sleep(1)
        periodicity.click() 
        all_periodicity=periodicity.find_elements_by_tag_name("option")
        all_periodicity[1].click()
        employe.click()
        all_options = employe.find_elements_by_tag_name("option")
        all_options[1].click()
        time.sleep(1)
        pupil.click()
        all_option = pupil.find_elements_by_tag_name("option")

        # Dziwnie działa dlatego zaznaczm na poczatku 2 opcje
        self.action.key_down(Keys.CONTROL)
        self.action.click(all_option[2])
        self.action.click(all_option[1])
        self.action.click(all_option[3])
        self.action.click(all_option[5])
        self.action.key_up(Keys.CONTROL).perform()
        time.sleep(1)
        self.browser.execute_script("validate()")

        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div[2]/div/div/form/div[2]/span/p"), "Podana data jest nieprawidłowa"))
        self.browser.close() 
    """ T56 Tworzenie zajęć niepoprawne - błędna godzina rozpoczęcia"""
    def test_T56(self):
=======
    """ T54 Tworzenie zajęć niepoprawne - brak podania godziny zakończenia"""
    def test_T54(self):
>>>>>>> 8ce13c0031744ee087c5634781b0293678e54a27
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
<<<<<<< HEAD
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[1]/a')
        settings.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[1]/p/input')
        date = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[2]/p/input')
        start_h = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[3]/p/input')
        end_h = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[4]/p/input')
        periodicity = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[5]/select')
        employe = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[6]/select')
        pupil = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[7]/select')
        end_date = (datetime.now() + timedelta(days=1) ).strftime('%Y-%m-%d')
        name.send_keys('Zajęcia synchroniczne')
        date.send_keys(end_date)
        start_h.send_keys('abc')
        end_h.send_keys('16:00')
        time.sleep(1)
        periodicity.click() 
        all_periodicity=periodicity.find_elements_by_tag_name("option")
        all_periodicity[1].click()
        employe.click()
        all_options = employe.find_elements_by_tag_name("option")
        all_options[1].click()
        time.sleep(1)
        pupil.click()
        all_option = pupil.find_elements_by_tag_name("option")

        # Dziwnie działa dlatego zaznaczm na poczatku 2 opcje
        self.action.key_down(Keys.CONTROL)
        self.action.click(all_option[2])
        self.action.click(all_option[1])
        self.action.click(all_option[3])
        self.action.click(all_option[5])
        self.action.key_up(Keys.CONTROL).perform()
        time.sleep(1)
        self.browser.execute_script("validate()")
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div[2]/div/div/form/div[3]/span/p"), "Podano niewłaściwy format godziny"))
        self.browser.close() 
    """ T57 Tworzenie zajęć niepoprawne - błędna godzina zakończenia"""
    def test_T57(self):
=======
    """ T55 Tworzenie zajęć niepoprawne - błędna data zajęć"""
    def test_T55(self):
>>>>>>> 8ce13c0031744ee087c5634781b0293678e54a27
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
<<<<<<< HEAD
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[1]/a')
        settings.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[1]/p/input')
        date = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[2]/p/input')
        start_h = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[3]/p/input')
        end_h = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[4]/p/input')
        periodicity = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[5]/select')
        employe = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[6]/select')
        pupil = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[7]/select')
        end_date = (datetime.now() + timedelta(days=1) ).strftime('%Y-%m-%d')
        name.send_keys('Zajęcia synchroniczne')
        date.send_keys(end_date)
        start_h.send_keys('14:00')
        end_h.send_keys('abc')
        time.sleep(1)
        periodicity.click() 
        all_periodicity=periodicity.find_elements_by_tag_name("option")
        all_periodicity[1].click()
        employe.click()
        all_options = employe.find_elements_by_tag_name("option")
        all_options[1].click()
        time.sleep(1)
        pupil.click()
        all_option = pupil.find_elements_by_tag_name("option")

        # Dziwnie działa dlatego zaznaczm na poczatku 2 opcje
        self.action.key_down(Keys.CONTROL)
        self.action.click(all_option[2])
        self.action.click(all_option[1])
        self.action.click(all_option[3])
        self.action.click(all_option[5])
        self.action.key_up(Keys.CONTROL).perform()
        time.sleep(1)
        self.browser.execute_script("validate()")
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div[2]/div/div/form/div[4]/span/p"), "Podano niewłaściwy format godziny"))
        self.browser.close() 
    """ T58 Tworzenie zajęć niepoprawne - brak podania cykliczności"""
    def test_T58(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[1]/a')
        settings.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[1]/p/input')
        date = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[2]/p/input')
        start_h = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[3]/p/input')
        end_h = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[4]/p/input')
        periodicity = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[5]/select')
        employe = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[6]/select')
        pupil = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[7]/select')
        end_date = (datetime.now() + timedelta(days=1) ).strftime('%Y-%m-%d')
        name.send_keys('Zajęcia synchroniczne')
        date.send_keys(end_date)
        start_h.send_keys('14:00')
        end_h.send_keys('16:00')
        time.sleep(1)
        employe.click()
        all_options = employe.find_elements_by_tag_name("option")
        all_options[1].click()
        time.sleep(1)
        pupil.click()
        all_option = pupil.find_elements_by_tag_name("option")

        # Dziwnie działa dlatego zaznaczm na poczatku 2 opcje
        self.action.key_down(Keys.CONTROL)
        self.action.click(all_option[2])
        self.action.click(all_option[1])
        self.action.click(all_option[3])
        self.action.click(all_option[5])
        self.action.key_up(Keys.CONTROL).perform()
        time.sleep(1)
        self.browser.execute_script("validate()")
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div[2]/div/div/form/div[5]/span/p"), "Nie wybrano cykliczności"))
        self.browser.close()   
    """ T59 Tworzenie zajęć niepoprawne - brak podania pracownika"""
    def test_T59(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[1]/a')
        settings.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[1]/p/input')
        date = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[2]/p/input')
        start_h = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[3]/p/input')
        end_h = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[4]/p/input')
        periodicity = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[5]/select')
        employe = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[6]/select')
        pupil = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[7]/select')
        end_date = (datetime.now() + timedelta(days=1) ).strftime('%Y-%m-%d')
        name.send_keys('Zajęcia synchroniczne')
        date.send_keys(end_date)
        start_h.send_keys('14:00')
        end_h.send_keys('16:00')
        time.sleep(1)
        periodicity.click() 
        all_periodicity=periodicity.find_elements_by_tag_name("option")
        all_periodicity[1].click()
        pupil.click()
        all_option = pupil.find_elements_by_tag_name("option")

        # Dziwnie działa dlatego zaznaczm na poczatku 2 opcje
        self.action.key_down(Keys.CONTROL)
        self.action.click(all_option[2])
        self.action.click(all_option[1])
        self.action.click(all_option[3])
        self.action.click(all_option[5])
        self.action.key_up(Keys.CONTROL).perform()
        time.sleep(1)
        self.browser.execute_script("validate()")
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div[2]/div/div/form/div[6]/span/p"), "Nie wybrano prowadzącego"))
        self.browser.close()   
    """ T60 Tworzenie zajęć niepoprawne - brak podania podopiecznych"""
    def test_T60(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[1]/a')
        settings.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[1]/p/input')
        date = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[2]/p/input')
        start_h = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[3]/p/input')
        end_h = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[4]/p/input')
        periodicity = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[5]/select')
        employe = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[6]/select')
        pupil = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[7]/select')
        end_date = (datetime.now() + timedelta(days=1) ).strftime('%Y-%m-%d')
        name.send_keys('Zajęcia synchroniczne')
        date.send_keys(end_date)
        start_h.send_keys('14:00')
        end_h.send_keys('16:00')
        time.sleep(1)
        periodicity.click() 
        all_periodicity=periodicity.find_elements_by_tag_name("option")
        all_periodicity[1].click()
        employe.click()
        all_options = employe.find_elements_by_tag_name("option")
        all_options[1].click()
        time.sleep(1)
        self.browser.execute_script("validate()")
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div[2]/div/div/form/div[7]/span/p"), "Nie wybrano uczestników"))
        self.browser.close()   
    """ T61 Możliwość stworzenia profilu pracownika poprawne"""
    def test_T61(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[2]/a')
        settings.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[1]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[2]/p/input')
        spec = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[3]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[4]/p/input')
        number =  self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[7]/p/input')
        name.send_keys('Jan')
        surname.send_keys('Kowalski')
        spec.send_keys('pływanie')
        email.send_keys('jan.kowalski@mail.com')
        number.send_keys('123456789')
        #self.browser.execute_script("validate()")
        self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[8]/button').submit()   
        self.browser.close()
    """ T62 Możliwość stworzenia profilu pracownika niepoprawne - brak podania imienia"""
    def test_T62(self):
=======
    """ T56 Tworzenie zajęć niepoprawne - błędna godzina rozpoczęcia"""
    def test_T56(self):
>>>>>>> 8ce13c0031744ee087c5634781b0293678e54a27
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
<<<<<<< HEAD
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[2]/a')
        settings.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[1]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[2]/p/input')
        spec = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[3]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[4]/p/input')
        number =  self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[7]/p/input')
        surname.send_keys('Kowalski')
        spec.send_keys('pływanie')
        email.send_keys('jan.kowalski@mail.com')
        number.send_keys('123456789')
        self.browser.execute_script("validate()")
        time.sleep(1)
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div[2]/div/div/form/div[1]/span/p"), "Nie podano imienia"))
        self.browser.close()
    """ T63 Możliwość stworzenia profilu pracownika niepoprawne - błędnie podane imię"""
    def test_T63(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[2]/a')
        settings.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[1]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[2]/p/input')
        spec = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[3]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[4]/p/input')
        number =  self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[7]/p/input')
        name.send_keys('Jan2')
        surname.send_keys('Kowalski')
        spec.send_keys('pływanie')
        email.send_keys('jan.kowalski@mail.com')
        number.send_keys('123456789')
        self.browser.execute_script("validate()")
        time.sleep(1)
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div[2]/div/div/form/div[1]/span/p"), "Podano niewłaściwe imie"))
        self.browser.close()
    """ T64 Możliwość stworzenia profilu pracownika niepoprawne - brak podania nazwiska"""
    def test_T64(self):
=======
    """ T57 Tworzenie zajęć niepoprawne - błędna godzina rozpoczęcia"""
    def test_T57(self):
>>>>>>> 8ce13c0031744ee087c5634781b0293678e54a27
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
<<<<<<< HEAD
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[2]/a')
        settings.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[1]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[2]/p/input')
        spec = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[3]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[4]/p/input')
        number =  self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[7]/p/input')
        name.send_keys('Jan')
        spec.send_keys('pływanie')
        email.send_keys('jan.kowalski@mail.com')
        number.send_keys('123456789')
        self.browser.execute_script("validate()")
        time.sleep(1)
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div[2]/div/div/form/div[2]/span/p"), "Nie podano nazwiska"))
        self.browser.close()
    """ T65 Możliwość stworzenia profilu pracownika niepoprawne - błędnie podane nazwisko"""
    def test_T65(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[2]/a')
        settings.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[1]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[2]/p/input')
        spec = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[3]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[4]/p/input')
        number =  self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[7]/p/input')
        name.send_keys('Jan')
        surname.send_keys('Kowalski1')
        spec.send_keys('pływanie')
        email.send_keys('jan.kowalski@mail.com')
        number.send_keys('123456789')
        self.browser.execute_script("validate()")
        time.sleep(1)
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div[2]/div/div/form/div[2]/span/p"), "Podano niewłaściwe nazwisko"))
        self.browser.close()
    """ T66 Możliwość stworzenia profilu pracownika niepoprawne - brak podania specjalizacj"""
    def test_T66(self):
=======
    """ T58 Tworzenie zajęć niepoprawne - brak podania cykliczności"""
    def test_T58(self):
>>>>>>> 8ce13c0031744ee087c5634781b0293678e54a27
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
<<<<<<< HEAD
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[2]/a')
        settings.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[1]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[2]/p/input')
        spec = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[3]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[4]/p/input')
        number =  self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[7]/p/input')
        name.send_keys('Jan')
        surname.send_keys('Kowalski')
        email.send_keys('jan.kowalski@mail.com')
        number.send_keys('123456789')
        self.browser.execute_script("validate()")
        time.sleep(1)
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div[2]/div/div/form/div[3]/span/p"), "Nie podano specjalizacji"))
        self.browser.close()
    """ T67 Możliwość stworzenia profilu pracownika niepoprawne - błędnym podaniu specjalizacji"""
    def test_T67(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[2]/a')
        settings.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[1]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[2]/p/input')
        spec = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[3]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[4]/p/input')
        number =  self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[7]/p/input')
        name.send_keys('Jan')
        surname.send_keys('Kowalski')
        spec.send_keys('pływanie1')
        email.send_keys('jan.kowalski@mail.com')
        number.send_keys('123456789')
        self.browser.execute_script("validate()")
        time.sleep(1)
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div[2]/div/div/form/div[3]/span/p"), "Podano niewłaściwą specjalizacje"))
        self.browser.close()
    """ T68 Możliwość stworzenia profilu pracownika niepoprawne - brak podania maila"""
    def test_T68(self):
=======
    """ T59 Tworzenie zajęć niepoprawne - brak podania pracownika"""
    def test_T59(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
    """ T60 Tworzenie zajęć niepoprawne - brak podania podopiecznych"""
    def test_T60(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
    """ T61 Możliwość stworzenia profilu pracownika poprawne"""
    def test_T61(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[2]/a')
        settings.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[1]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[2]/p/input')
        spec = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[3]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[4]/p/input')
        number =  self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[7]/p/input')
        name.send_keys('Jan')
        surname.send_keys('Kowalski')
        spec.send_keys('pływanie')
        email.send_keys('jan.kowalski@mail.com')
        number.send_keys('123456789')
        time.sleep(10)
        #self.browser.execute_script("validate()")
        self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[8]/button').submit()   
        self.wait.until(EC.presence_of_element_located((By.XPATH, '/html/body/div/div/div/div/a/button')))
        #self.wait.until(EC.presence_of_element_located((By.CLASS_NAME, 'popup')))
        self.browser.close()
    """ T62 Możliwość stworzenia profilu pracownika niepoprawne - brak podania imienia"""
    def test_T62(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
    """ T63 Możliwość stworzenia profilu pracownika niepoprawne - błędnie podane imię"""
    def test_T63(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
    """ T64 Możliwość stworzenia profilu pracownika niepoprawne - brak podania nazwiska"""
    def test_T64(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
    """ T65 Możliwość stworzenia profilu pracownika niepoprawne - błędnie podane nazwisko"""
    def test_T65(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
    """ T66 Możliwość stworzenia profilu pracownika niepoprawne - brak podania specjalizacj"""
    def test_T66(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
    """ T67 Możliwość stworzenia profilu pracownika niepoprawne - błędnym podaniu specjalizacji"""
    def test_T67(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1) 
    """ T68 Możliwość stworzenia profilu pracownika niepoprawne - brak podania maila"""
    def test_T68(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
    """ T69 Możliwość stworzenia profilu pracownika niepoprawne - błędne podanie maila bez “@“"""
    def test_T69(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
    """ T70 Możliwość stworzenia profilu pracownika niepoprawne - błędne podanie maila bez “.“"""
    def test_T70(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
    """ T71 Możliwość stworzenia profilu pracownika niepoprawne - błędne podanie maila bez “@….“"""
    def test_T71(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
    """ T72 Możliwość stworzenia profilu pracownika niepoprawne - błędne nr telefonu"""
    def test_T72(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
    """ T73 Możliwość stworzenia profilu pracownika niepoprawne - za krótki nr telefonu"""
    def test_T73(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
    """ T74 Możliwość stworzenia profilu pracownika niepoprawne - za długi nr telefonu"""
    def test_T74(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
    """ T75 Możliwość stworzenia profilu pracownika poprawne - bez podania nr telefonu"""
    def test_T75(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
    """ T76 Możliwość stworzenia profilu pracownika poprawne - nazwisko dwuczłonowe"""
    def test_T76(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
    """ T77 Tworzenie zajęć akceptacja zgłoszenia poprawne - zaakceptowanie zgłoszenia"""
    def test_T77(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[3]/a')
        settings.click()
        time.sleep(1)
        accept=self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/div/div[1]/div/form/button[2]')
        accept.submit()
        self.browser.close()
    """ T78 Tworzenie zajęć akceptacja zgłoszenia poprawne - odrzucenie zgłoszenia"""
    def test_T78(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[3]/a')
        settings.click()
        time.sleep(1)
        decline=self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/div/div[1]/div/form/button[1]')
        decline.submit()
        self.browser.close()
    """ T79 Zarządzanie profilem dziecka tworzenie profilu dziecka poprawn"""
    def test_T79(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('user@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[1]/a')
        settings.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[1]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[2]/p/input')
        age = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[3]/p/input')
        name.send_keys('Jan')
        surname.send_keys('Kowalski')
        age.send_keys(10)
        #self.browser.execute_script("validate()")
        self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[4]/button').submit()   
        #self.wait.until(EC.presence_of_element_located((By.XPATH, "/html/body/div/div/div/div")))
        self.wait.until(EC.presence_of_element_located((By.CLASS_NAME, 'popup')))
        self.browser.close()
    """ T80 Zarządzanie profilem dziecka tworzenie profilu dziecka niepoprawne - brak imienia"""
    def test_T80(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('user@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[1]/a')
        settings.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[1]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[2]/p/input')
        age = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[3]/p/input')
        surname.send_keys('Kowalski')
        age.send_keys(10)
        self.browser.execute_script("validate()")
        #self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[4]/button').submit()   
        time.sleep(1)
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div[2]/div/div/form/div[1]/span/p"), "Nie podano imienia"))
        self.browser.close()
    """ T81 Zarządzanie profilem dziecka tworzenie profilu dziecka niepoprawne - błędne imię"""
    def test_T81(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('user@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[1]/a')
        settings.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[1]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[2]/p/input')
        age = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[3]/p/input')
        surname.send_keys('Kowalski')
        name.send_keys('Jan1')
        age.send_keys(10)
        self.browser.execute_script("validate()")
        #self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[4]/button').submit()   
        time.sleep(1)
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div[2]/div/div/form/div[1]/span/p"), "Podano niewłaściwe imie"))
        self.browser.close()
    """ T82 Zarządzanie profilem dziecka tworzenie profilu dziecka niepoprawne - brak nazwiska"""
    def test_T82(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('user@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[1]/a')
        settings.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[1]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[2]/p/input')
        age = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[3]/p/input')
        name.send_keys('Jan')
        age.send_keys(10)
        self.browser.execute_script("validate()")
        #self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[4]/button').submit()   
        time.sleep(1)
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div[2]/div/div/form/div[2]/span/p"), "Nie podano nazwiska"))
        self.browser.close()
    """ T83 Zarządzanie profilem dziecka tworzenie profilu dziecka niepoprawne - błędne nazwisko"""
    def test_T83(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('user@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[1]/a')
        settings.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[1]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[2]/p/input')
        age = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[3]/p/input')
        name.send_keys('Jan')
        surname.send_keys('Kowalski1')
        age.send_keys(10)
        self.browser.execute_script("validate()")
        #self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[4]/button').submit()   
        time.sleep(1)
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div[2]/div/div/form/div[2]/span/p"), "Podano niewłaściwe nazwisko"))
        self.browser.close()
    """ T84 Zarządzanie profilem dziecka tworzenie profilu dziecka poprawne - nazwisko dwuczłonowe"""
    def test_T84(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('user@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[1]/a')
        settings.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[1]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[2]/p/input')
        age = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[3]/p/input')
        name.send_keys('Jan')
        surname.send_keys('Nowak')
        age.send_keys(10)
        self.browser.execute_script("validate()")
        self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[4]/button').submit()   
        time.sleep(1)
        #self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div[2]/div/div/form/div[2]/span/p"), "Podano niewłaściwe nazwisko"))
        self.wait.until(EC.presence_of_element_located((By.CLASS_NAME, 'popup')))
        self.browser.close()
    """ T85 Zarządzanie profilem dziecka tworzenie profilu dziecka niepoprawne - za mały wiek"""
    def test_T85(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('user@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[1]/a')
        settings.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[1]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[2]/p/input')
        age = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[3]/p/input')
        name.send_keys('Jan')
        surname.send_keys('Kowalski')
        age.send_keys(0)
        self.browser.execute_script("validate()")
        #self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[4]/button').submit()   
        time.sleep(1)
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div[2]/div/div/form/div[3]/span/p"), "Podano niewłaściwy wiek"))
        self.browser.close()
    """ T86 Zarządzanie profilem dziecka tworzenie profilu dziecka niepoprawne - za duży wiek"""
    def test_T86(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('user@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[1]/a')
        settings.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[1]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[2]/p/input')
        age = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[3]/p/input')
        name.send_keys('Jan')
        surname.send_keys('Kowalski')
        age.send_keys(100)
        self.browser.execute_script("validate()")
        #self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[4]/button').submit()   
        time.sleep(1)
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div[2]/div/div/form/div[3]/span/p"), "Podano niewłaściwy wiek"))
        self.browser.close()
    """ T87 Zarządzanie profilem dziecka tworzenie profilu dziecka niepoprawne - brak podania wieku"""
    def test_T87(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('user@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[1]/a')
        settings.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[1]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[2]/p/input')
        age = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[3]/p/input')
        name.send_keys('Jan')
        surname.send_keys('Kowalski1')
        self.browser.execute_script("validate()")
        #self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[4]/button').submit()   
        time.sleep(1)
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div[2]/div/div/form/div[3]/span/p"), "Nie podano wieku"))
        self.browser.close()
    """ T88 Zarządzanie profilem dziecka zgłaszanie dziecka poprawne"""
    def test_T88(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('user@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[2]/a')
        settings.click()
        pupil = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/div/div[1]/div/h5/button')
        pupil.click()
        instyt = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/div/div[2]/div/form/button[1]')
        instyt.submit()
        select = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/select')
        all_options = select.find_elements_by_tag_name("option")
        all_options[0].click()
        button = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/button').submit()
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div/div/div/div/b[1]"), "Dziecko"))
        self.browser.close()
    """ T89 Zarządzanie profilem dziecka zgłaszanie dziecka poprawne"""
    def test_T89(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('user@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[2]/a')
        settings.click()
        pupil = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/div/div[1]/div/h5/button')
        pupil.click()
        instyt = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/div/div[2]/div/form/button[1]')
        instyt.submit()   
        serch = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/input')
        serch.send_keys('Aka')
        select = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/select')
        all_options = select.find_elements_by_tag_name("option")
        all_options[0].click()
        button = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/button').submit()
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div/div/div/div/b[1]"), "Dziecko"))
        self.browser.close()
    """ T90 Zarządzanie profilem dziecka usuwanie profilu dziecka poprawne"""
    def test_T90(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('user@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[2]/a')
        settings.click()
        pupil = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/div/div[1]/div/h5/button')
        pupil.click()
        time.sleep(1)
        delete = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/div/div[2]/div/form/button[2]')
        delete.click()
        time.sleep(1)
        confirm = self.browser.find_element_by_xpath('/html/body/div[1]/div/div/div/div/form/div/button[2]')
        confirm.click()
        self.browser.close()
    """ T91 Podgląd w plan zajęć użytkownika poprawne"""
    def test_T91(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('user@mail.com')
        button.submit()
        time.sleep(1)
        self.browser.close()
    """ T92 Ustawienie przypomnień użytkownik poprawne"""
    def test_T92(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('user@mail.com')
        button.submit()
        time.sleep(1)
        activity = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/div[2]/span[8]')
        activity.click()
        remind = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/button[1]')
        remind.click()
        time.sleep(1)
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div[1]/div/div/div/font"), "Włączono powiadomenie o zajęciach"))
        self.browser.close()
    """ T93 Interakcja związana z aktywnością wysyłanie wiadomości użytkownika poprawne"""
    def test_T93(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('user@mail.com')
        button.submit()
        time.sleep(1)
        activity = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/div[2]/span[8]')
        activity.click()
        message = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/button[2]')
        message.click()
        text = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[2]/form/textarea')
        text.click()
        text.send_keys('Testowa wiadomość')
        send = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[3]/form/button[2]')
        time.sleep(3)
        send.submit()
        time.sleep(3)
        send.submit()
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div[1]/div/div/div/font"), "Wysłano wiadomość do prowadzącego"))
        self.browser.close()
    """ T94 Interakcja związana z aktywnością wysyłanie wiadomości użytkownika niepoprawne - nie wpisanie treści wiadomości """
    def test_T94(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('user@mail.com')
        button.submit()
        time.sleep(1)
        activity = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/div[2]/span[8]')
        activity.click()
        message = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/button[2]')
        message.click()
        text = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[2]/form/textarea')
        send = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[3]/form/button[2]')
        time.sleep(3)
        send.submit()
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div[2]/div/div/div/div[2]/form/span[2]"), "Musisz podac terść wiadomości!"))
        self.browser.close()
    """ T95 Interakcja związana z aktywnością wysyłanie wiadomości użytkownika niepoprawne - za długa treści wiadomości """
    def test_T95(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('user@mail.com')
        button.submit()
        time.sleep(1)
        activity = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/div[2]/span[8]')
        activity.click()
        message = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/button[2]')
        message.click()
        text = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[2]/form/textarea')
        text.click()
        text.send_keys('Lorem ipsum dolor sit amet, consecteur adipiscing elit. Nullam ornare lectus id mi placerat suscipit. Nullam lobortis metus quis nibh sagittis euismod. Sed orci sapien, aliquam quis mi vel, posuere fermentum est. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin semper ligula quis eros.')
        send = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[3]/form/button[2]')
        time.sleep(3)
        send.submit()
        time.sleep(3)
        send.submit()
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div[1]/div/div/div/font"), "Wysłano wiadomość do prowadzącego"))
        self.browser.close()
    """ T96 Podgląd bazy danych poprawne"""
    def test_T96(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Marik1234')
        login.send_keys('dziennik@mail.com')
        button.submit()
        time.sleep(1)
        admin = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[1]/a')
        admin.click()
        time.sleep(1)
        user = self.browser.find_element_by_xpath('/html/body/div/div[2]/div/div[1]/div[2]/div[2]/table/tbody/tr[8]/th/a')
        user.click()
        time.sleep(5)
        self.browser.close()
    """ T97 Rejestr zdarzeń poprawne"""
    def test_T97(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Marik1234')
        login.send_keys('dziennik@mail.com')
        button.submit()
        time.sleep(1)
        admin = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[1]/a')
        admin.click()
        time.sleep(1)
        copy = self.browser.find_element_by_xpath('/html/body/div/div[2]/div/div[1]/div[1]/form[1]/button')
        copy.submit()
        time.sleep(1)
        self.browser.close()
    """ T98 Logowanie z opcją zapamiętania poprawne"""
    def test_T98(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Marik1234')
        login.send_keys('dziennik@mail.com')
        button.submit()
        time.sleep(1)
        admin = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[1]/a')
        admin.click()
        time.sleep(1)
        log = self.browser.find_element_by_xpath('/html/body/div/div[2]/div/div[1]/div[2]/div[1]/table/tbody/tr/td[2]/a')
        log.click()
        time.sleep(1)
        self.browser.close()
    """ T99 Logowanie z opcją zapamiętania niepoprawne - nie zalogowano - błędne dane logowania"""
    def test_T99(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button') 
        remember =  self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/input ')    
        password.send_keys('Złehasło')
        login.send_keys('dziennik@mail.com')
        remember.click()
        button.submit()
        time.sleep(1)
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div/div/div/div/form/div[6]/p"), "Nazwa użytkowania, bądź hasło się nie zgadzją. Spróbuj ponownie"))
        
        self.browser.close()
    """ T100 Logowanie z opcją zapamiętania niepoprawne - nie zalogowano - nie pełne dane logowania"""
    def test_T100(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button') 
        remember =  self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/input ')    
        login.send_keys('dziennik@mail.com')
        remember.click()
        button.submit()
        time.sleep(1)
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div/div/div/div/form/div[6]/p"), "Nazwa użytkowania, bądź hasło się nie zgadzją. Spróbuj ponownie"))
        self.browser.close()
    """ T101 Rejestracja instytucji niepoprawne - błędne podanie specjalizacji"""
    def test_T101(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('mateuszwicki1@gmail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[3]')
        settings.click()
        time.sleep(1)
        change = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/ul/a[1]')
        change.click()
        email = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[1]/p/input')
        email.click()
        time.sleep(1)
        email.send_keys('mateuszwicki1+zmiana@gmail.com')
        time.sleep(1)
        self.browser.execute_script("validate()")
        self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[2]/button').submit()
        time.sleep(1)
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div[1]/div/div/div"), "Na podany email została wysłana wiadomośc z linkiem potwierdzającym zmiane emailu."))
        self.browser.close()  

    """ T102 Ustawienia użytkownika zmiana adresu email niepoprawne - zły format adresu email"""
    def test_T102(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('mateuszwicki1@gmail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[3]')
        settings.click()
        time.sleep(1)
        change = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/ul/a[1]')
        change.click()
        email = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[1]/p/input')
        email.click()
        time.sleep(1)
        email.send_keys('dziennik#mail')
        time.sleep(1)
        self.browser.execute_script("validate()")
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div/div/div/div/form/div[1]/span"), "Podany mail nie jest prawidłowy"))
        self.browser.close() 

    """ T103 Ustawienia użytkownika zmiana adresu email niepoprawne - nie podano adresu email"""
    def test_T103(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('mateuszwicki1@gmail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[3]')
        settings.click()
        time.sleep(1)
        change = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/ul/a[1]')
        change.click()
        email = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[1]/p/input')
        email.click()
        time.sleep(1)
        email.send_keys('')
        time.sleep(1)
        self.browser.execute_script("validate()")
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div/div/div/div/form/div[1]/span"), "Nie podano maila"))
        self.browser.close() 

    """ T104 Ustawienia użytkownika zmiana adresu email niepoprawne - podanie zajętego adresu email"""
    def test_T104(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('mateuszwicki1@gmail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[3]')
        settings.click()
        time.sleep(1)
        change = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/ul/a[2]')
        change.click()
        email = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[1]/p/input')
        email.click()
        time.sleep(1)
        email.send_keys('mateuszwicki1@gmail.com')
        time.sleep(1)
        self.browser.execute_script("validate()")
        self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[2]/button').submit()
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div[1]/div/div/div"), "Podany adres email jest już zajęty"))
        self.browser.close() 

    """ T105 Ustawienia użytkownika zmiana hasła poprawne"""
    def test_T105(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik2')
        login.send_keys('projektnzi@gmail.com')
        button.submit()
        time.sleep(2)
        self.browser.get('http://127.0.0.1:8000/view/settings/change_password/(%3FPNDg%5B0-9A-Za-z_%5C-%5D+)/(%3FPajo7j9-bebb10348d485055482108cec25f57b3%5B0-9A-Za-z%5D%7B1,13%7D-%5B0-9A-Za-z%5D%7B1,20%7D)/$')
        time.sleep(10)
        old_pass = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[1]/p/input')
        old_pass.click()
        old_pass.send_keys('Dziennik2')
        old_pass = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[2]/p/input')
        old_pass.click()
        old_pass.send_keys('Dziennik1')
        old_pass = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[3]/p/input')
        old_pass.click()
        old_pass.send_keys('Dziennik1')
        self.browser.execute_script("validate()")
        time.sleep(20)
        time.sleep(1)
        self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/div/form/div[4]/button').click()
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div[1]/div/div/div"), "Hasło zostało zmienione"))
        self.browser.close() 
    """ T114 Ustawienia użytkownika zmiana imienia i nazwiska poprawne"""   
    def test_T114(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik2')
        login.send_keys('projektnzi@gmail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[3]')
        settings.click()
        time.sleep(1)
        change = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/ul/a[3]')
        change.click()
        time.sleep(1)
        imie = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[1]/p/input')
        nazwisko = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[2]/p/input')
        imie.clear()
        nazwisko.clear()
        imie.send_keys('Jan')
        nazwisko.send_keys('Kowalski')
        buttonZmienDane=self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[3]/button')
        buttonZmienDane.submit()
        time.sleep(1)
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div[1]/div/div/div"), "Dane zostały zmienione"))
        self.browser.close()    
    """ T115 Ustawienia użytkownika zmiana imienia i nazwiska niepoprawne - brak imienia"""   
    def test_T115(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik2')
        login.send_keys('projektnzi@gmail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[3]')
        settings.click()
        time.sleep(1)
        change = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/ul/a[3]')
        change.click()
        time.sleep(1)
        imie = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[1]/p/input')
        nazwisko = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[2]/p/input')
        imie.clear()
        nazwisko.clear()
        nazwisko.send_keys('Kowalski')
        self.browser.execute_script("validate()")
        time.sleep(1)
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div/div/div/div/form/div[1]/span"), "Nie podano imienia"))
        self.browser.close()
    
    """ T116 Ustawienia użytkownika zmiana imienia i nazwiska niepoprawne - za krótkie imię"""   
    def test_T116(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik2')
        login.send_keys('projektnzi@gmail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[3]')
        settings.click()
        time.sleep(1)
        change = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/ul/a[3]')
        change.click()
        time.sleep(1)
        imie = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[1]/p/input')
        nazwisko = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[2]/p/input')
        imie.clear()
        nazwisko.clear()
        imie.send_keys('CJ')
        nazwisko.send_keys('Kowalski')
        self.browser.execute_script("validate()")
        time.sleep(1)
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div/div/div/div/form/div[1]/span"), "Podano niewłaściwe imie"))
        self.browser.close()
    """ T117 Ustawienia użytkownika zmiana imienia i nazwiska niepoprawne - wprowadzenie cyfry w imieniu"""   
    def test_T117(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik2')
        login.send_keys('projektnzi@gmail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[3]')
        settings.click()
        time.sleep(1)
        change = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/ul/a[3]')
        change.click()
        time.sleep(1)
        imie = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[1]/p/input')
        nazwisko = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[2]/p/input')
        imie.clear()
        nazwisko.clear()
        imie.send_keys('Jan3')
        nazwisko.send_keys('Kowalski')
        self.browser.execute_script("validate()")
        time.sleep(1)
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div/div/div/div/form/div[1]/span"), "Podano niewłaściwe imie"))
        self.browser.close()
    """ T118 Ustawienia użytkownika zmiana imienia i nazwiska niepoprawne - brak imienia"""   
    def test_T118(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik2')
        login.send_keys('projektnzi@gmail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[3]')
        settings.click()
        time.sleep(1)
        change = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/ul/a[3]')
        change.click()
        time.sleep(1)
        imie = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[1]/p/input')
        nazwisko = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[2]/p/input')
        imie.clear()
        nazwisko.clear()
        imie.send_keys('Jan')
        self.browser.execute_script("validate()")
        time.sleep(1)
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div/div/div/div/form/div[2]/span"), "Nie podano nazwiska"))
        self.browser.close()
    """ T119 Ustawienia użytkownika zmiana imienia i nazwiska niepoprawne - za krótkie nazwisko"""   
    def test_T119(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik2')
        login.send_keys('projektnzi@gmail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[3]')
        settings.click()
        time.sleep(1)
        change = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/ul/a[3]')
        change.click()
        time.sleep(1)
        imie = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[1]/p/input')
        nazwisko = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[2]/p/input')
        imie.clear()
        nazwisko.clear()
        imie.send_keys('Jan')
        nazwisko.send_keys('Ko')
        self.browser.execute_script("validate()")
        time.sleep(1)
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div/div/div/div/form/div[2]/span"), "Podano niewłaściwe nazwisko"))
        self.browser.close()
    """ T120 Ustawienia użytkownika zmiana imienia i nazwiska niepoprawne - wprowadzenie cyfry w nazwisku"""   
    def test_T120(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik2')
        login.send_keys('projektnzi@gmail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[3]')
        settings.click()
        time.sleep(1)
        change = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/ul/a[3]')
        change.click()
        time.sleep(1)
        imie = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[1]/p/input')
        nazwisko = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[2]/p/input')
        imie.clear()
        nazwisko.clear()
        imie.send_keys('Jan')
        nazwisko.send_keys('Kowalski1')
        self.browser.execute_script("validate()")
        time.sleep(1)
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div/div/div/div/form/div[2]/span"), "Podano niewłaściwe nazwisko"))
        self.browser.close()
    """ T124 Ustawienia instytucji - zmiana nazwy poprawne"""     
    def test_T124(self):
>>>>>>> 8ce13c0031744ee087c5634781b0293678e54a27
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
<<<<<<< HEAD
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[2]/a')
        settings.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[1]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[2]/p/input')
        spec = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[3]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[4]/p/input')
        number =  self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[7]/p/input')
        name.send_keys('Jan')
        surname.send_keys('Kowalski')
        spec.send_keys('pływanie')
        number.send_keys('123456789')
        self.browser.execute_script("validate()")
        time.sleep(1)
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div[2]/div/div/form/div[4]/span/p"), "Nie podano maila"))
        self.browser.close()
    """ T69 Możliwość stworzenia profilu pracownika niepoprawne - błędne podanie maila bez “@“"""
    def test_T69(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[2]/a')
        settings.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[1]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[2]/p/input')
        spec = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[3]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[4]/p/input')
        number =  self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[7]/p/input')
        name.send_keys('Jan')
        surname.send_keys('Kowalski')
        spec.send_keys('pływanie')
        email.send_keys('jan.kowalskimail.com')
        number.send_keys('123456789')
        self.browser.execute_script("validate()")
        time.sleep(1)
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div[2]/div/div/form/div[4]/span/p"), "Podany mail nie jest prawidłowy"))
        self.browser.close()
    """ T70 Możliwość stworzenia profilu pracownika niepoprawne - błędne podanie maila bez “.“"""
    def test_T70(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[2]/a')
        settings.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[1]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[2]/p/input')
        spec = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[3]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[4]/p/input')
        number =  self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[7]/p/input')
        name.send_keys('Jan')
        surname.send_keys('Kowalski')
        spec.send_keys('pływanie')
        email.send_keys('jan.kowalski@mailcom')
        number.send_keys('123456789')
        self.browser.execute_script("validate()")
        time.sleep(1)
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div[2]/div/div/form/div[4]/span/p"), "Podany mail jest nieprawidłowy"))
        self.browser.close()
    """ T71 Możliwość stworzenia profilu pracownika niepoprawne - błędne podanie maila bez “@….“"""
    def test_T71(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[2]/a')
        settings.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[1]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[2]/p/input')
        spec = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[3]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[4]/p/input')
        number =  self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[7]/p/input')
        name.send_keys('Jan')
        surname.send_keys('Kowalski')
        spec.send_keys('pływanie')
        email.send_keys('jan.kowalski')
        number.send_keys('123456789')
        self.browser.execute_script("validate()")
        time.sleep(1)
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div[2]/div/div/form/div[4]/span/p"), "Podany mail nie jest prawidłowy"))
        self.browser.close()
    """ T72 Możliwość stworzenia profilu pracownika niepoprawne - błędne nr telefonu"""
    def test_T72(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[2]/a')
        settings.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[1]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[2]/p/input')
        spec = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[3]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[4]/p/input')
        number =  self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[7]/p/input')
        name.send_keys('Jan')
        surname.send_keys('Kowalski')
        spec.send_keys('pływanie')
        email.send_keys('jan.kowalski@mail.com')
        number.send_keys('123456abc')
        self.browser.execute_script("validate()")
        time.sleep(1)
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div[2]/div/div/form/div[7]/span/p"), "Podany nr telefonu nie jest prawidłowy"))
        self.browser.close()
    """ T73 Możliwość stworzenia profilu pracownika niepoprawne - za krótki nr telefonu"""
    def test_T73(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[2]/a')
        settings.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[1]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[2]/p/input')
        spec = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[3]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[4]/p/input')
        number =  self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[7]/p/input')
        name.send_keys('Jan')
        surname.send_keys('Kowalski')
        spec.send_keys('pływanie')
        email.send_keys('jan.kowalski@mail.com')
        number.send_keys('12345678')
        self.browser.execute_script("validate()")
        time.sleep(1)
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div[2]/div/div/form/div[7]/span/p"), "Podany nr telefonu nie jest prawidłowy"))
=======
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[4]')
        settings.click()
        time.sleep(1)
        change = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/ul/a[3]')
        change.click()
        time.sleep(10)
>>>>>>> 8ce13c0031744ee087c5634781b0293678e54a27
        self.browser.close()
    """ T74 Możliwość stworzenia profilu pracownika niepoprawne - za długi nr telefonu"""
    def test_T74(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[2]/a')
        settings.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[1]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[2]/p/input')
        spec = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[3]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[4]/p/input')
        number =  self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[7]/p/input')
        name.send_keys('Jan')
        surname.send_keys('Kowalski')
        spec.send_keys('pływanie')
        email.send_keys('jan.kowalski@mail.com')
        number.send_keys('1234567890123456')
        self.browser.execute_script("validate()")
        time.sleep(1)
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div[2]/div/div/form/div[7]/span/p"), "Podany nr telefonu nie jest prawidłowy"))
        self.browser.close()
    """ T75 Możliwość stworzenia profilu pracownika poprawne - bez podania nr telefonu"""
    def test_T75(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[2]/a')
        settings.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[1]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[2]/p/input')
        spec = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[3]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[4]/p/input')
        number =  self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[7]/p/input')
        name.send_keys('Jan')
        surname.send_keys('Kowalski')
        spec.send_keys('pływanie')
        email.send_keys('jan.kowalski@mail.com')
        self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[8]/button').submit() 
        #self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div[2]/div/div/form/div[7]/span/p"), "Nie podano nr telefonu"))
        self.browser.close()
    """ T76 Możliwość stworzenia profilu pracownika poprawne - nazwisko dwuczłonowe"""
    def test_T76(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[2]/a')
        settings.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[1]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[2]/p/input')
        spec = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[3]/p/input')
        email = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[4]/p/input')
        number =  self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[7]/p/input')
        name.send_keys('Jan')
        surname.send_keys('Kowalski-Nowak')
        spec.send_keys('pływanie')
        email.send_keys('jan.kowalski@mail.com')
        number.send_keys('123456789')
        #self.browser.execute_script("validate()")
        #time.sleep(1)
        self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[8]/button').submit()  
        #self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div[2]/div/div/form/div[1]/span/p"), "Nie podano imienia"))
        self.browser.close()
    """ T77 Tworzenie zajęć akceptacja zgłoszenia poprawne - zaakceptowanie zgłoszenia"""
    def test_T77(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[3]/a')
        settings.click()
        time.sleep(1)
        accept=self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/div/div[1]/div/form/button[2]')
        accept.submit()
        self.browser.close()
    """ T78 Tworzenie zajęć akceptacja zgłoszenia poprawne - odrzucenie zgłoszenia"""
    def test_T78(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[3]/a')
        settings.click()
        time.sleep(1)
        decline=self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/div/div[1]/div/form/button[1]')
        decline.submit()
        self.browser.close()
    """ T79 Zarządzanie profilem dziecka tworzenie profilu dziecka poprawn"""
    def test_T79(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('user@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[1]/a')
        settings.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[1]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[2]/p/input')
        age = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[3]/p/input')
        name.send_keys('Jan')
        surname.send_keys('Kowalski')
        age.send_keys(10)
        #self.browser.execute_script("validate()")
        self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[4]/button').submit()   
        #self.wait.until(EC.presence_of_element_located((By.XPATH, "/html/body/div/div/div/div")))
        self.wait.until(EC.presence_of_element_located((By.CLASS_NAME, 'popup')))
        self.browser.close()
    """ T80 Zarządzanie profilem dziecka tworzenie profilu dziecka niepoprawne - brak imienia"""
    def test_T80(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('user@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[1]/a')
        settings.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[1]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[2]/p/input')
        age = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[3]/p/input')
        surname.send_keys('Kowalski')
        age.send_keys(10)
        self.browser.execute_script("validate()")
        #self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[4]/button').submit()   
        time.sleep(1)
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div[2]/div/div/form/div[1]/span/p"), "Nie podano imienia"))
        self.browser.close()
    """ T81 Zarządzanie profilem dziecka tworzenie profilu dziecka niepoprawne - błędne imię"""
    def test_T81(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('user@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[1]/a')
        settings.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[1]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[2]/p/input')
        age = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[3]/p/input')
        surname.send_keys('Kowalski')
        name.send_keys('Jan1')
        age.send_keys(10)
        self.browser.execute_script("validate()")
        #self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[4]/button').submit()   
        time.sleep(1)
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div[2]/div/div/form/div[1]/span/p"), "Podano niewłaściwe imie"))
        self.browser.close()
    """ T82 Zarządzanie profilem dziecka tworzenie profilu dziecka niepoprawne - brak nazwiska"""
    def test_T82(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('user@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[1]/a')
        settings.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[1]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[2]/p/input')
        age = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[3]/p/input')
        name.send_keys('Jan')
        age.send_keys(10)
        self.browser.execute_script("validate()")
        #self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[4]/button').submit()   
        time.sleep(1)
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div[2]/div/div/form/div[2]/span/p"), "Nie podano nazwiska"))
        self.browser.close()
    """ T83 Zarządzanie profilem dziecka tworzenie profilu dziecka niepoprawne - błędne nazwisko"""
    def test_T83(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('user@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[1]/a')
        settings.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[1]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[2]/p/input')
        age = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[3]/p/input')
        name.send_keys('Jan')
        surname.send_keys('Kowalski1')
        age.send_keys(10)
        self.browser.execute_script("validate()")
        #self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[4]/button').submit()   
        time.sleep(1)
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div[2]/div/div/form/div[2]/span/p"), "Podano niewłaściwe nazwisko"))
        self.browser.close()
    """ T84 Zarządzanie profilem dziecka tworzenie profilu dziecka poprawne - nazwisko dwuczłonowe"""
    def test_T84(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('user@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[1]/a')
        settings.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[1]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[2]/p/input')
        age = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[3]/p/input')
        name.send_keys('Jan')
        surname.send_keys('Nowak')
        age.send_keys(10)
        self.browser.execute_script("validate()")
        self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[4]/button').submit()   
        time.sleep(1)
        #self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div[2]/div/div/form/div[2]/span/p"), "Podano niewłaściwe nazwisko"))
        self.wait.until(EC.presence_of_element_located((By.CLASS_NAME, 'popup')))
        self.browser.close()
    """ T85 Zarządzanie profilem dziecka tworzenie profilu dziecka niepoprawne - za mały wiek"""
    def test_T85(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('user@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[1]/a')
        settings.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[1]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[2]/p/input')
        age = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[3]/p/input')
        name.send_keys('Jan')
        surname.send_keys('Kowalski')
        age.send_keys(0)
        self.browser.execute_script("validate()")
        #self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[4]/button').submit()   
        time.sleep(1)
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div[2]/div/div/form/div[3]/span/p"), "Podano niewłaściwy wiek"))
        self.browser.close()
    """ T86 Zarządzanie profilem dziecka tworzenie profilu dziecka niepoprawne - za duży wiek"""
    def test_T86(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('user@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[1]/a')
        settings.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[1]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[2]/p/input')
        age = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[3]/p/input')
        name.send_keys('Jan')
        surname.send_keys('Kowalski')
        age.send_keys(100)
        self.browser.execute_script("validate()")
        #self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[4]/button').submit()   
        time.sleep(1)
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div[2]/div/div/form/div[3]/span/p"), "Podano niewłaściwy wiek"))
        self.browser.close()
    """ T87 Zarządzanie profilem dziecka tworzenie profilu dziecka niepoprawne - brak podania wieku"""
    def test_T87(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('user@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[1]/a')
        settings.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[1]/p/input')
        surname = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[2]/p/input')
        age = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[3]/p/input')
        name.send_keys('Jan')
        surname.send_keys('Kowalski1')
        self.browser.execute_script("validate()")
        #self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/div[4]/button').submit()   
        time.sleep(1)
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div[2]/div/div/form/div[3]/span/p"), "Nie podano wieku"))
        self.browser.close()
    """ T88 Zarządzanie profilem dziecka zgłaszanie dziecka poprawne"""
    def test_T88(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('user@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[2]/a')
        settings.click()
        pupil = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/div/div[1]/div/h5/button')
        pupil.click()
        time.sleep(2)
        instyt = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/div/div[2]/div/form/div/div/div[3]/button')
        instyt.click()
        time.sleep(1)
        select = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/select')
        all_options = select.find_elements_by_tag_name("option")
        all_options[0].click()
        button = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/button').submit()
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div/div/div/div/b[1]"), "Dziecko"))
        self.browser.close()
    """ T89 Zarządzanie profilem dziecka zgłaszanie dziecka poprawne"""
    def test_T89(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('user@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[2]/a')
        settings.click()
        time.sleep(1)
        pupil = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/div/div[1]/div/h5/button')
        pupil.click()
        time.sleep(1)
        instyt = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/div/div[2]/div/form/div/div/div[3]/button')
        instyt.click() 
        time.sleep(1)  
        serch = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/input')
        serch.send_keys('Aka')
        select = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/select')
        all_options = select.find_elements_by_tag_name("option")
        all_options[0].click()
        button = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/form/button').submit()
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div/div/div/div/b[1]"), "Dziecko"))
        self.browser.close()
    """ T90 Zarządzanie profilem dziecka usuwanie profilu dziecka poprawne"""
    def test_T90(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('user@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[2]/a')
        settings.click()
        pupil = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/div/div[1]/div/h5/button')
        pupil.click()
        time.sleep(1)
        delete = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/div/div[2]/div/form/div/div/div[2]/button')
        delete.click()
        time.sleep(10)
        confirm = self.browser.find_element_by_xpath('/html/body/div[1]/div/div/div/div/form/div/button[2]')
        confirm.click()
        self.browser.close()
    """ T91 Podgląd w plan zajęć użytkownika poprawne"""
    def test_T91(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('user@mail.com')
        button.submit()
        time.sleep(1)
        self.wait.until(EC.presence_of_element_located((By.CLASS_NAME, 'activity')))
        self.browser.close()
    """ T92 Ustawienie przypomnień użytkownik poprawne"""
    def test_T92(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('user@mail.com')
        button.submit()
        time.sleep(1)
        activity = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div[2]/span[8]')
        activity.click()
        remind = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/button[1]')
        remind.click()
        time.sleep(1)
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div[1]/div/div/div/font"), "Włączono powiadomenie o zajęciach"))
        self.browser.close()
    """ T93 Interakcja związana z aktywnością wysyłanie wiadomości użytkownika poprawne"""
    def test_T93(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('user@mail.com')
        button.submit()
        time.sleep(1)
        activity = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div[2]/span[8]')
        activity.click()
        message = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/button[2]')
        message.click()
        text = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[2]/form/textarea')
        text.click()
        text.send_keys('Testowa wiadomość')
        send = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[2]/form/button[2]')
        time.sleep(3)
        send.click()
        sendconfirm = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[3]/form/button[2]')
        time.sleep(3)
        sendconfirm.click()
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div[1]/div/div/div/font"), "Wysłano wiadomość do prowadzącego"))
        self.browser.close()
    """ T94 Interakcja związana z aktywnością wysyłanie wiadomości użytkownika niepoprawne - nie wpisanie treści wiadomości """
    def test_T94(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('user@mail.com')
        button.submit()
        time.sleep(1)
        activity = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div[2]/span[8]')
        activity.click()
        message = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/button[2]')
        message.click()
        text = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[2]/form/textarea')
        send = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[2]/form/button[2]')
        time.sleep(3)
        send.click()
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div[2]/div/div/div/div[2]/form/span[2]"), "Musisz podac terść wiadomości!"))
        self.browser.close()
    """ T95 Interakcja związana z aktywnością wysyłanie wiadomości użytkownika niepoprawne - za długa treści wiadomości """
    def test_T95(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('user@mail.com')
        button.submit()
        time.sleep(1)
        activity = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div[2]/span[8]')
        activity.click()
        message = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/button[2]')
        message.click()
        text = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[2]/form/textarea')
        text.click()
        text.send_keys('Lorem ipsum dolor sit amet, consecteur adipiscing elit. Nullam ornare lectus id mi placerat suscipit. Nullam lobortis metus quis nibh sagittis euismod. Sed orci sapien, aliquam quis mi vel, posuere fermentum est. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Proin semper ligula quis eros. dodatkowe znaki')
        send = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[2]/form/button[2]')
        time.sleep(3)
        send.click()
        sendconfirm = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[3]/form/button[2]')
        time.sleep(3)
        sendconfirm.click()
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div[1]/div/div/div/font"), "Wysłano wiadomość do prowadzącego"))
        self.browser.close()
    """ T96 Podgląd bazy danych poprawne"""
    def test_T96(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Marik1234')
        login.send_keys('dziennik@mail.com')
        button.submit()
        time.sleep(1)
        admin = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[1]/a')
        admin.click()
        time.sleep(1)
        copy = self.browser.find_element_by_xpath('/html/body/div/div[2]/div/div[1]/div[1]/form[1]/button')
        copy.click()
        time.sleep(5)
        self.browser.close()
    """ T97 Rejestr zdarzeń poprawne"""
    def test_T97(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Marik1234')
        login.send_keys('dziennik@mail.com')
        button.submit()
        time.sleep(1)
        admin = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[1]/a')
        admin.click()
        time.sleep(1)
        #copy = self.browser.find_element_by_xpath('/html/body/div/div[2]/div/div[1]/div[1]/form[1]/button')
        #copy.submit()
        copy = self.browser.find_element_by_xpath('/html/body/div/div[2]/div/div[1]/div[2]/div[1]/table/tbody/tr/th/a')
        copy.click()
        time.sleep(5)
        self.browser.close()
    """ T98 Logowanie z opcją zapamiętania poprawne !Ręcznie ponieważ trzeba zamknąć przeglądarkę!"""
    def test_T98(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Marik1234')
        login.send_keys('dziennik@mail.com')
        button.submit()
        time.sleep(1)
        admin = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[1]/a')
        admin.click()
        time.sleep(10)
        log = self.browser.find_element_by_xpath('/html/body/div/div[2]/div/div[1]/div[2]/div[1]/table/tbody/tr/td[2]/a')
        log.click()
        time.sleep(1)
        self.browser.close()
    """ T99 Logowanie z opcją zapamiętania niepoprawne - nie zalogowano - błędne dane logowania"""
    def test_T99(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button') 
        remember =  self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/input ')    
        password.send_keys('Złehasło')
        login.send_keys('dziennik@mail.com')
        remember.click()
        button.submit()
        time.sleep(1)
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div/div/div/div/form/div[6]/p"), "Nazwa użytkowania, bądź hasło się nie zgadzją. Spróbuj ponownie"))
        
        self.browser.close()
    """ T100 Logowanie z opcją zapamiętania niepoprawne - nie zalogowano - nie pełne dane logowania"""
    def test_T100(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button') 
        remember =  self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[4]/input ')    
        login.send_keys('dziennik@mail.com')
        remember.click()
        button.submit()
        time.sleep(1)
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div/div/div/div/form/div[6]/p"), "Nazwa użytkowania, bądź hasło się nie zgadzją. Spróbuj ponownie"))
        self.browser.close()
    """ T101 Rejestracja instytucji niepoprawne - błędne podanie specjalizacji"""
    def test_T101(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('mateuszwicki1@gmail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[3]')
        settings.click()
        time.sleep(1)
        change = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/ul/a[1]')
        change.click()
        email = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[1]/p/input')
        email.click()
        time.sleep(1)
        email.send_keys('mateuszwicki1+zmiana@gmail.com')
        time.sleep(1)
        self.browser.execute_script("validate()")
        self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[2]/button').submit()
        time.sleep(1)
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div[1]/div/div/div"), "Na podany email została wysłana wiadomośc z linkiem potwierdzającym zmiane emailu."))
        self.browser.close()  

    """ T102 Ustawienia użytkownika zmiana adresu email niepoprawne - zły format adresu email"""
    def test_T102(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('mateuszwicki1@gmail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[3]')
        settings.click()
        time.sleep(1)
        change = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/ul/a[1]')
        change.click()
        email = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[1]/p/input')
        email.click()
        time.sleep(1)
        email.send_keys('dziennik#mail')
        time.sleep(1)
        self.browser.execute_script("validate()")
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div/div/div/div/form/div[1]/span"), "Podany mail nie jest prawidłowy"))
        self.browser.close() 

    """ T103 Ustawienia użytkownika zmiana adresu email niepoprawne - nie podano adresu email"""
    def test_T103(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('mateuszwicki1@gmail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[3]')
        settings.click()
        time.sleep(1)
        change = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/ul/a[1]')
        change.click()
        email = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[1]/p/input')
        email.click()
        time.sleep(1)
        email.send_keys('')
        time.sleep(1)
        self.browser.execute_script("validate()")
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div/div/div/div/form/div[1]/span"), "Nie podano maila"))
        self.browser.close() 

    """ T104 Ustawienia użytkownika zmiana adresu email niepoprawne - podanie zajętego adresu email"""
    def test_T104(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('mateuszwicki1@gmail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[3]')
        settings.click()
        time.sleep(1)
        change = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/ul/a[2]')
        change.click()
        email = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[1]/p/input')
        email.click()
        time.sleep(1)
        email.send_keys('mateuszwicki1@gmail.com')
        time.sleep(1)
        self.browser.execute_script("validate()")
        self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[2]/button').submit()
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div[1]/div/div/div"), "Podany adres email jest już zajęty"))
        self.browser.close() 

    """ T105 Ustawienia użytkownika zmiana hasła poprawne"""
    def test_T105(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik2')
        login.send_keys('projektnzi@gmail.com')
        button.submit()
        time.sleep(2)
        self.browser.get('http://127.0.0.1:8000/view/settings/change_password/(%3FPNjM%5B0-9A-Za-z_%5C-%5D+)/(%3FPam4s5q-b9615d4c8d8fd4ba2d2af94668bfa626%5B0-9A-Za-z%5D%7B1,13%7D-%5B0-9A-Za-z%5D%7B1,20%7D)/$')
        time.sleep(10)
        old_pass = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[1]/p/input')
        old_pass.click()
        old_pass.send_keys('Dziennik2')
        old_pass = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[2]/p/input')
        old_pass.click()
        old_pass.send_keys('Dziennik1')
        old_pass = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[3]/p/input')
        old_pass.click()
        old_pass.send_keys('Dziennik1')
        self.browser.execute_script("validate()")
        time.sleep(20)
        time.sleep(1)
        self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/div/form/div[4]/button').click()
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div[1]/div/div/div"), "Hasło zostało zmienione"))
        self.browser.close() 
    """ T114 Ustawienia użytkownika zmiana imienia i nazwiska poprawne"""   
    def test_T114(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('user@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[3]')
        settings.click()
        time.sleep(1)
        change = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/ul/a[3]')
        change.click()
        time.sleep(1)
        imie = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[1]/p/input')
        nazwisko = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[2]/p/input')
        imie.clear()
        nazwisko.clear()
        imie.send_keys('Jan')
        nazwisko.send_keys('Kowalski')
        buttonZmienDane=self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[3]/button')
        buttonZmienDane.submit()
        time.sleep(1)
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div[1]/div/div/div"), "Dane zostały zmienione"))
        self.browser.close()    
    """ T115 Ustawienia użytkownika zmiana imienia i nazwiska niepoprawne - brak imienia"""   
    def test_T115(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('user@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[3]')
        settings.click()
        time.sleep(1)
        change = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/ul/a[3]')
        change.click()
        time.sleep(1)
        imie = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[1]/p/input')
        nazwisko = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[2]/p/input')
        imie.clear()
        nazwisko.clear()
        nazwisko.send_keys('Kowalski')
        self.browser.execute_script("validate()")
        time.sleep(1)
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div/div/div/div/form/div[1]/span"), "Nie podano imienia"))
        self.browser.close()
    
    """ T116 Ustawienia użytkownika zmiana imienia i nazwiska niepoprawne - za krótkie imię"""   
    def test_T116(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('user@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[3]')
        settings.click()
        time.sleep(1)
        change = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/ul/a[3]')
        change.click()
        time.sleep(1)
        imie = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[1]/p/input')
        nazwisko = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[2]/p/input')
        imie.clear()
        nazwisko.clear()
        imie.send_keys('CJ')
        nazwisko.send_keys('Kowalski')
        self.browser.execute_script("validate()")
        time.sleep(1)
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div/div/div/div/form/div[1]/span"), "Podano niewłaściwe imie"))
        self.browser.close()
    """ T117 Ustawienia użytkownika zmiana imienia i nazwiska niepoprawne - wprowadzenie cyfry w imieniu"""   
    def test_T117(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('user@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[3]')
        settings.click()
        time.sleep(1)
        change = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/ul/a[3]')
        change.click()
        time.sleep(1)
        imie = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[1]/p/input')
        nazwisko = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[2]/p/input')
        imie.clear()
        nazwisko.clear()
        imie.send_keys('Jan3')
        nazwisko.send_keys('Kowalski')
        self.browser.execute_script("validate()")
        time.sleep(1)
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div/div/div/div/form/div[1]/span"), "Podano niewłaściwe imie"))
        self.browser.close()
    """ T118 Ustawienia użytkownika zmiana imienia i nazwiska niepoprawne - brak imienia"""   
    def test_T118(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('user@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[3]')
        settings.click()
        time.sleep(1)
        change = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/ul/a[3]')
        change.click()
        time.sleep(1)
        imie = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[1]/p/input')
        nazwisko = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[2]/p/input')
        imie.clear()
        nazwisko.clear()
        imie.send_keys('Jan')
        self.browser.execute_script("validate()")
        time.sleep(1)
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div/div/div/div/form/div[2]/span"), "Nie podano nazwiska"))
        self.browser.close()
    """ T119 Ustawienia użytkownika zmiana imienia i nazwiska niepoprawne - za krótkie nazwisko"""   
    def test_T119(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('user@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[3]')
        settings.click()
        time.sleep(1)
        change = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/ul/a[3]')
        change.click()
        time.sleep(1)
        imie = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[1]/p/input')
        nazwisko = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[2]/p/input')
        imie.clear()
        nazwisko.clear()
        imie.send_keys('Jan')
        nazwisko.send_keys('Ko')
        self.browser.execute_script("validate()")
        time.sleep(1)
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div/div/div/div/form/div[2]/span"), "Podano niewłaściwe nazwisko"))
        self.browser.close()
    """ T120 Ustawienia użytkownika zmiana imienia i nazwiska niepoprawne - wprowadzenie cyfry w nazwisku"""   
    def test_T120(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('user@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[3]')
        settings.click()
        time.sleep(1)
        change = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/ul/a[3]')
        change.click()
        time.sleep(1)
        imie = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[1]/p/input')
        nazwisko = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[2]/p/input')
        imie.clear()
        nazwisko.clear()
        imie.send_keys('Jan')
        nazwisko.send_keys('Kowalski1')
        self.browser.execute_script("validate()")
        time.sleep(1)
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div/div/div/div/form/div[2]/span"), "Podano niewłaściwe nazwisko"))
        self.browser.close()
    """ T124 Ustawienia instytucji - zmiana nazwy poprawne"""     
    def test_T124(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[4]')
        settings.click()
        time.sleep(1)
        change = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/ul/a/li')
        change.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[1]/p/input')
        name.send_keys('Kręgielnia')
        specjalization = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[3]/p/input')
        category = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[2]/select')
        all_options = category.find_elements_by_tag_name("option")
        for option in all_options:
            if option.get_attribute("value") == "Klub sportowy":
                option.click()
        specjalization.send_keys('Kręgle')
        time.sleep(1)
        self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[4]/button').click()
        time.sleep(10)
        self.wait.until(EC.presence_of_element_located((By.CLASS_NAME, 'popup')))
        self.browser.close()

    """ T125 Ustawienia instytucji - zmiana nazwy niepoprawne - brak nazwy"""     
    def test_T125(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[4]')
        settings.click()
        time.sleep(1)
        change = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/ul/a/li')
        change.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[1]/p/input')
        name.send_keys('')
        specjalization = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[3]/p/input')
        category = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[2]/select')
        all_options = category.find_elements_by_tag_name("option")
        for option in all_options:
            if option.get_attribute("value") == "Klub sportowy":
                option.click()
        specjalization.send_keys('Kręgle')
        time.sleep(1)
        self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[4]/button').click()
        time.sleep(1)
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div/div/div/div/form/div[1]/span"), "Nie podano nazwy"))
        self.browser.close()

    """ T126 Ustawienia instytucji - zmiana nazwy niepoprawne - za krótka nazwa"""     
    def test_T126(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[4]')
        settings.click()
        time.sleep(1)
        change = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/ul/a/li')
        change.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[1]/p/input')
        name.send_keys('H')
        specjalization = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[3]/p/input')
        category = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[2]/select')
        all_options = category.find_elements_by_tag_name("option")
        for option in all_options:
            if option.get_attribute("value") == "Klub sportowy":
                option.click()
        specjalization.send_keys('Kręgle')
        time.sleep(1)
        self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[4]/button').click()
        time.sleep(1)
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div/div/div/div/form/div[1]/span"), "Podano niewłaściwą nazwę"))
        self.browser.close()

    """ T127 Ustawienia instytucji - zmiana nazwy niepoprawne - brak podania profilu"""     
    def test_T127(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[4]')
        settings.click()
        time.sleep(1)
        change = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/ul/a/li')
        change.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[1]/p/input')
        name.send_keys('Kręgielnia')
        specjalization = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[3]/p/input')
        category = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[2]/select')
        all_options = category.find_elements_by_tag_name("option")
        for option in all_options:
            if option.get_attribute("value") == "Klub sportowy":
                option.click()
        specjalization.send_keys('')
        time.sleep(1)
        self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[4]/button').click()
        time.sleep(1)
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div/div/div/div/form/div[3]/span"), "Nie podano profilu np. klub piłkarski, szkoła j. angielskiego"))
        self.browser.close()

    """ T128 Ustawienia instytucji - zmiana nazwy niepoprawne - brak podanie profilu"""     
    def test_T128(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
        settings = self.browser.find_element_by_xpath('/html/body/nav/div/ul/li[4]')
        settings.click()
        time.sleep(1)
        change = self.browser.find_element_by_xpath('/html/body/main/div[2]/div/div/ul/a/li')
        change.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[1]/p/input')
        name.send_keys('Kręgielnia')
        specjalization = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[3]/p/input')
        category = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[2]/select')
        all_options = category.find_elements_by_tag_name("option")
        for option in all_options:
            if option.get_attribute("value") == "Klub sportowy":
                option.click()
        specjalization.send_keys('')
        time.sleep(1)
        self.browser.find_element_by_xpath('/html/body/main/div/div/div/div/form/div[4]/button').click()
        time.sleep(1)
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/main/div/div/div/div/form/div[3]/span"), "Nie podano profilu np. klub piłkarski, szkoła j. angielskiego"))
        self.browser.close()

    """ T133 Zarządzanie zajęciami instytucji poprawne"""     
    def test_T133(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
        activity = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div[2]/span[8]')
        activity.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[1]/p/input')
        date = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[2]/p/input')
        start_h = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[3]/p/input')
        end_h = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[4]/p/input')
        periodicity = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[5]/select')
        employe = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[6]/select')
        pupil = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[7]/select')
        name.clear()
        date.clear()
        start_h.clear()
        end_h.clear()
        name.send_keys('Nauka pływania dla grupy niezaawansowanej')
        end_date = (datetime.now() + timedelta(days=1) ).strftime('%Y-%m-%d')
        date.send_keys(end_date)
        start_h.send_keys('12:00')
        end_h.send_keys('14:00')
        time.sleep(1)

        periodicity.click() 
        all_periodicity=periodicity.find_elements_by_tag_name("option")
        all_periodicity[1].click()

        employe.click() 
        all_options = employe.find_elements_by_tag_name("option")
        all_options[1].click()
        time.sleep(1)

        pupil.click()
        all_option = pupil.find_elements_by_tag_name("option")
        # Dziwnie działa dlatego zaznaczm na poczatku 2 opcje
        self.action.key_down(Keys.CONTROL)
        self.action.click(all_option[2])
        self.action.click(all_option[1])
        self.action.click(all_option[3])
        self.action.click(all_option[5])
        self.action.key_up(Keys.CONTROL).perform()

        time.sleep(1) 

        self.browser.find_element_by_xpath("/html/body/div[2]/div/div/div/div[1]/form/div[9]/button").click()   
        time.sleep(1) 
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div[1]/div/div/div/font"), "Zaktualizowano zajęcia"))
        self.browser.close()


    """ T134 Zarządzanie zajęciami instytucji niepoprawne - brak nazwy zajęć"""     
    def test_T134(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
        activity = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div[2]/span[8]')
        activity.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[1]/p/input')
        date = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[2]/p/input')
        start_h = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[3]/p/input')
        end_h = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[4]/p/input')
        periodicity = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[5]/select')
        employe = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[6]/select')
        pupil = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[7]/select')
        name.clear()
        date.clear()
        start_h.clear()
        end_h.clear()
        name.send_keys('')
        end_date = (datetime.now() + timedelta(days=1) ).strftime('%Y-%m-%d')
        date.send_keys(end_date)
        start_h.send_keys('12:00')
        end_h.send_keys('14:00')
        time.sleep(1)

        periodicity.click() 
        all_periodicity=periodicity.find_elements_by_tag_name("option")
        all_periodicity[1].click()

        employe.click() 
        all_options = employe.find_elements_by_tag_name("option")
        all_options[1].click()
        time.sleep(1)

        pupil.click()
        all_option = pupil.find_elements_by_tag_name("option")
        # Dziwnie działa dlatego zaznaczm na poczatku 2 opcje
        self.action.key_down(Keys.CONTROL)
        self.action.click(all_option[2])
        self.action.click(all_option[1])
        self.action.click(all_option[3])
        self.action.click(all_option[5])
        self.action.key_up(Keys.CONTROL).perform()

        time.sleep(1) 

        self.browser.find_element_by_xpath("/html/body/div[2]/div/div/div/div[1]/form/div[9]/button").click()   
        time.sleep(1) 
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div[2]/div/div/div/div[1]/form/div[1]/span/p"), "Nie podano nazwy"))
        self.browser.close()

    """ T136 Zarządzanie zajęciami instytucji niepoprawne - brak terminu zajęć"""     
    def test_T136(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
        activity = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div[2]/span[8]')
        activity.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[1]/p/input')
        date = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[2]/p/input')
        start_h = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[3]/p/input')
        end_h = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[4]/p/input')
        periodicity = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[5]/select')
        employe = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[6]/select')
        pupil = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[7]/select')
        name.clear()
        date.clear()
        start_h.clear()
        end_h.clear()
        name.send_keys('Nauka pływania dla grupy niezaawansowanej')
        end_date = (datetime.now() + timedelta(days=1) ).strftime('%Y-%m-%d')
        date.send_keys('')
        start_h.send_keys('12:00')
        end_h.send_keys('14:00')
        time.sleep(1)

        periodicity.click() 
        all_periodicity=periodicity.find_elements_by_tag_name("option")
        all_periodicity[1].click()

        employe.click() 
        all_options = employe.find_elements_by_tag_name("option")
        all_options[1].click()
        time.sleep(1)

        pupil.click()
        all_option = pupil.find_elements_by_tag_name("option")
        # Dziwnie działa dlatego zaznaczm na poczatku 2 opcje
        self.action.key_down(Keys.CONTROL)
        self.action.click(all_option[2])
        self.action.click(all_option[1])
        self.action.click(all_option[3])
        self.action.click(all_option[5])
        self.action.key_up(Keys.CONTROL).perform()

        time.sleep(1) 

        self.browser.find_element_by_xpath("/html/body/div[2]/div/div/div/div[1]/form/div[9]/button").click()   
        time.sleep(1) 
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div[2]/div/div/div/div[1]/form/div[2]/span/p"), "Nie podano daty zajęć"))
        self.browser.close()

    """ T137 Zarządzanie zajęciami instytucji niepoprawne - zły format terminu zajęć"""     
    def test_T137(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
        activity = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div[2]/span[8]')
        activity.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[1]/p/input')
        date = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[2]/p/input')
        start_h = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[3]/p/input')
        end_h = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[4]/p/input')
        periodicity = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[5]/select')
        employe = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[6]/select')
        pupil = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[7]/select')
        name.clear()
        date.clear()
        start_h.clear()
        end_h.clear()
        name.send_keys('Nauka pływania dla grupy niezaawansowanej')
        end_date = (datetime.now() + timedelta(days=1) ).strftime('%Y-%m-%d')
        date.send_keys('abc')
        start_h.send_keys('12:00')
        end_h.send_keys('14:00')
        time.sleep(1)

        periodicity.click() 
        all_periodicity=periodicity.find_elements_by_tag_name("option")
        all_periodicity[1].click()

        employe.click() 
        all_options = employe.find_elements_by_tag_name("option")
        all_options[1].click()
        time.sleep(1)

        pupil.click()
        all_option = pupil.find_elements_by_tag_name("option")
        # Dziwnie działa dlatego zaznaczm na poczatku 2 opcje
        self.action.key_down(Keys.CONTROL)
        self.action.click(all_option[2])
        self.action.click(all_option[1])
        self.action.click(all_option[3])
        self.action.click(all_option[5])
        self.action.key_up(Keys.CONTROL).perform()

        time.sleep(1) 

        self.browser.find_element_by_xpath("/html/body/div[2]/div/div/div/div[1]/form/div[9]/button").click()   
        time.sleep(1) 
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div[2]/div/div/div/div[1]/form/div[2]/span/p"), "Podana data jest nieprawidłowa"))
        self.browser.close()

    """ T138 Zarządzanie zajęciami instytucji niepoprawne - zły format terminu zajęć"""     
    def test_T138(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
        activity = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div[2]/span[8]')
        activity.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[1]/p/input')
        date = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[2]/p/input')
        start_h = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[3]/p/input')
        end_h = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[4]/p/input')
        periodicity = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[5]/select')
        employe = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[6]/select')
        pupil = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[7]/select')
        name.clear()
        date.clear()
        start_h.clear()
        end_h.clear()
        name.send_keys('Nauka pływania dla grupy niezaawansowanej')
        end_date = (datetime.now() - timedelta(days=1) ).strftime('%Y-%m-%d')
        date.send_keys(end_date)
        start_h.send_keys('12:00')
        end_h.send_keys('14:00')
        time.sleep(1)

        periodicity.click() 
        all_periodicity=periodicity.find_elements_by_tag_name("option")
        all_periodicity[1].click()

        employe.click() 
        all_options = employe.find_elements_by_tag_name("option")
        all_options[1].click()
        time.sleep(1)

        pupil.click()
        all_option = pupil.find_elements_by_tag_name("option")
        # Dziwnie działa dlatego zaznaczm na poczatku 2 opcje
        self.action.key_down(Keys.CONTROL)
        self.action.click(all_option[2])
        self.action.click(all_option[1])
        self.action.click(all_option[3])
        self.action.click(all_option[5])
        self.action.key_up(Keys.CONTROL).perform()

        time.sleep(1) 

        self.browser.find_element_by_xpath("/html/body/div[2]/div/div/div/div[1]/form/div[9]/button").click()   
        time.sleep(1) 
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div[2]/div/div/div/div[1]/form/div[2]/span/p"), "Podana data jest nieprawidłowa"))
        self.browser.close()

    """ T139 Zarządzanie zajęciami instytucji niepoprawne - zły format terminu zajęć"""     
    def test_T139(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
        activity = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div[2]/span[8]')
        activity.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[1]/p/input')
        date = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[2]/p/input')
        start_h = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[3]/p/input')
        end_h = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[4]/p/input')
        periodicity = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[5]/select')
        employe = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[6]/select')
        pupil = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[7]/select')
        name.clear()
        date.clear()
        start_h.clear()
        end_h.clear()
        name.send_keys('Nauka pływania dla grupy niezaawansowanej')
        end_date = (datetime.now() + timedelta(days=1) ).strftime('%Y-%m-%d')
        date.send_keys(end_date)
        start_h.send_keys('14:00')
        end_h.send_keys('12:00')
        time.sleep(1)

        periodicity.click() 
        all_periodicity=periodicity.find_elements_by_tag_name("option")
        all_periodicity[1].click()

        employe.click() 
        all_options = employe.find_elements_by_tag_name("option")
        all_options[1].click()
        time.sleep(1)

        pupil.click()
        all_option = pupil.find_elements_by_tag_name("option")
        # Dziwnie działa dlatego zaznaczm na poczatku 2 opcje
        self.action.key_down(Keys.CONTROL)
        self.action.click(all_option[2])
        self.action.click(all_option[1])
        self.action.click(all_option[3])
        self.action.click(all_option[5])
        self.action.key_up(Keys.CONTROL).perform()

        time.sleep(1) 

        self.browser.find_element_by_xpath("/html/body/div[2]/div/div/div/div[1]/form/div[9]/button").click()   
        time.sleep(1) 
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div[2]/div/div/div/div[1]/form/div[4]/span/p"), "Podano złą godzinę"))
        self.browser.close()

    """ T140 Zarządzanie zajęciami instytucji niepoprawne - brak czasu trwania zajęć"""     
    def test_T140(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
        activity = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div[2]/span[8]')
        activity.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[1]/p/input')
        date = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[2]/p/input')
        start_h = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[3]/p/input')
        end_h = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[4]/p/input')
        periodicity = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[5]/select')
        employe = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[6]/select')
        pupil = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[7]/select')
        name.clear()
        date.clear()
        start_h.clear()
        end_h.clear()
        name.send_keys('Nauka pływania dla grupy niezaawansowanej')
        end_date = (datetime.now() + timedelta(days=1) ).strftime('%Y-%m-%d')
        date.send_keys(end_date)
        start_h.send_keys('13:00')
        end_h.send_keys('13:00')
        time.sleep(1)

        periodicity.click() 
        all_periodicity=periodicity.find_elements_by_tag_name("option")
        all_periodicity[1].click()

        employe.click() 
        all_options = employe.find_elements_by_tag_name("option")
        all_options[1].click()
        time.sleep(1)

        pupil.click()
        all_option = pupil.find_elements_by_tag_name("option")
        # Dziwnie działa dlatego zaznaczm na poczatku 2 opcje
        self.action.key_down(Keys.CONTROL)
        self.action.click(all_option[2])
        self.action.click(all_option[1])
        self.action.click(all_option[3])
        self.action.click(all_option[5])
        self.action.key_up(Keys.CONTROL).perform()

        time.sleep(1) 

        self.browser.find_element_by_xpath("/html/body/div[2]/div/div/div/div[1]/form/div[9]/button").click()   
        time.sleep(1) 
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div[2]/div/div/div/div[1]/form/div[4]/span/p"), "Podano złą godzinę"))
        self.browser.close()

    """ T141 Zarządzanie zajęciami instytucji niepoprawne - zły format godziny rozpoczęcia zajęć"""     
    def test_T141(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
        activity = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div[2]/span[8]')
        activity.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[1]/p/input')
        date = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[2]/p/input')
        start_h = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[3]/p/input')
        end_h = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[4]/p/input')
        periodicity = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[5]/select')
        employe = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[6]/select')
        pupil = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[7]/select')
        name.clear()
        date.clear()
        start_h.clear()
        end_h.clear()
        name.send_keys('Nauka pływania dla grupy niezaawansowanej')
        end_date = (datetime.now() + timedelta(days=1) ).strftime('%Y-%m-%d')
        date.send_keys(end_date)
        start_h.send_keys('abc')
        end_h.send_keys('13:00')
        time.sleep(1)

        periodicity.click() 
        all_periodicity=periodicity.find_elements_by_tag_name("option")
        all_periodicity[1].click()

        employe.click() 
        all_options = employe.find_elements_by_tag_name("option")
        all_options[1].click()
        time.sleep(1)

        pupil.click()
        all_option = pupil.find_elements_by_tag_name("option")
        # Dziwnie działa dlatego zaznaczm na poczatku 2 opcje
        self.action.key_down(Keys.CONTROL)
        self.action.click(all_option[2])
        self.action.click(all_option[1])
        self.action.click(all_option[3])
        self.action.click(all_option[5])
        self.action.key_up(Keys.CONTROL).perform()

        time.sleep(1) 

        self.browser.find_element_by_xpath("/html/body/div[2]/div/div/div/div[1]/form/div[9]/button").click()   
        time.sleep(1) 
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div[2]/div/div/div/div[1]/form/div[3]/span/p"), "Podano niewłaściwy format godziny"))
        self.browser.close()

    """ T142 Zarządzanie zajęciami instytucji niepoprawne - braku godziny rozpoczęcia zajęć"""     
    def test_T142(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
        activity = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div[2]/span[8]')
        activity.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[1]/p/input')
        date = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[2]/p/input')
        start_h = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[3]/p/input')
        end_h = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[4]/p/input')
        periodicity = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[5]/select')
        employe = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[6]/select')
        pupil = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[7]/select')
        name.clear()
        date.clear()
        start_h.clear()
        end_h.clear()
        name.send_keys('Nauka pływania dla grupy niezaawansowanej')
        end_date = (datetime.now() + timedelta(days=1) ).strftime('%Y-%m-%d')
        date.send_keys(end_date)
        start_h.send_keys('')
        end_h.send_keys('13:00')
        time.sleep(1)

        periodicity.click() 
        all_periodicity=periodicity.find_elements_by_tag_name("option")
        all_periodicity[1].click()

        employe.click() 
        all_options = employe.find_elements_by_tag_name("option")
        all_options[1].click()
        time.sleep(1)

        pupil.click()
        all_option = pupil.find_elements_by_tag_name("option")
        # Dziwnie działa dlatego zaznaczm na poczatku 2 opcje
        self.action.key_down(Keys.CONTROL)
        self.action.click(all_option[2])
        self.action.click(all_option[1])
        self.action.click(all_option[3])
        self.action.click(all_option[5])
        self.action.key_up(Keys.CONTROL).perform()

        time.sleep(1) 

        self.browser.find_element_by_xpath("/html/body/div[2]/div/div/div/div[1]/form/div[9]/button").click()   
        time.sleep(1) 
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div[2]/div/div/div/div[1]/form/div[3]/span/p"), "Nie podano godziny rozpoczęcia"))
        self.browser.close()

    """ T143 Zarządzanie zajęciami instytucji niepoprawne - zły format godziny zakończenia zajęć"""     
    def test_T143(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
        activity = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div[2]/span[8]')
        activity.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[1]/p/input')
        date = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[2]/p/input')
        start_h = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[3]/p/input')
        end_h = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[4]/p/input')
        periodicity = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[5]/select')
        employe = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[6]/select')
        pupil = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[7]/select')
        name.clear()
        date.clear()
        start_h.clear()
        end_h.clear()
        name.send_keys('Nauka pływania dla grupy niezaawansowanej')
        end_date = (datetime.now() + timedelta(days=1) ).strftime('%Y-%m-%d')
        date.send_keys(end_date)
        start_h.send_keys('13:00')
        end_h.send_keys('abc')
        time.sleep(1)

        periodicity.click() 
        all_periodicity=periodicity.find_elements_by_tag_name("option")
        all_periodicity[1].click()

        employe.click() 
        all_options = employe.find_elements_by_tag_name("option")
        all_options[1].click()
        time.sleep(1)

        pupil.click()
        all_option = pupil.find_elements_by_tag_name("option")
        # Dziwnie działa dlatego zaznaczm na poczatku 2 opcje
        self.action.key_down(Keys.CONTROL)
        self.action.click(all_option[2])
        self.action.click(all_option[1])
        self.action.click(all_option[3])
        self.action.click(all_option[5])
        self.action.key_up(Keys.CONTROL).perform()

        time.sleep(1) 

        self.browser.find_element_by_xpath("/html/body/div[2]/div/div/div/div[1]/form/div[9]/button").click()   
        time.sleep(1) 
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div[2]/div/div/div/div[1]/form/div[4]/span/p"), "Podano niewłaściwy format godziny"))
        self.browser.close()

    """ T144 Zarządzanie zajęciami instytucji niepoprawne - braku godziny zakończenia zajęć"""     
    def test_T144(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
        activity = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div[2]/span[8]')
        activity.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[1]/p/input')
        date = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[2]/p/input')
        start_h = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[3]/p/input')
        end_h = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[4]/p/input')
        periodicity = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[5]/select')
        employe = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[6]/select')
        pupil = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[7]/select')
        name.clear()
        date.clear()
        start_h.clear()
        end_h.clear()
        name.send_keys('Nauka pływania dla grupy niezaawansowanej')
        end_date = (datetime.now() + timedelta(days=1) ).strftime('%Y-%m-%d')
        date.send_keys(end_date)
        start_h.send_keys('13:00')
        end_h.send_keys('')
        time.sleep(1)

        periodicity.click() 
        all_periodicity=periodicity.find_elements_by_tag_name("option")
        all_periodicity[1].click()

        employe.click() 
        all_options = employe.find_elements_by_tag_name("option")
        all_options[1].click()
        time.sleep(1)

        pupil.click()
        all_option = pupil.find_elements_by_tag_name("option")
        # Dziwnie działa dlatego zaznaczm na poczatku 2 opcje
        self.action.key_down(Keys.CONTROL)
        self.action.click(all_option[2])
        self.action.click(all_option[1])
        self.action.click(all_option[3])
        self.action.click(all_option[5])
        self.action.key_up(Keys.CONTROL).perform()

        time.sleep(1) 

        self.browser.find_element_by_xpath("/html/body/div[2]/div/div/div/div[1]/form/div[9]/button").click()   
        time.sleep(1) 
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div[2]/div/div/div/div[1]/form/div[4]/span/p"), "Nie podano godziny zakończenia"))
        self.browser.close()

    """ T145 Zarządzanie zajęciami instytucji niepoprawne - brak podopiecznych"""     
    def test_T145(self):
        self.browser.get('http://localhost:8000/login')
        self.browser.maximize_window()
        login = self.browser.find_element_by_xpath('/html/body/div/div/div/div/form/div[2]/input')
        password = self.browser.find_element_by_name('password')
        button = self.browser.find_element_by_tag_name('button')      
        password.send_keys('Dziennik1')
        login.send_keys('institution@mail.com')
        button.submit()
        time.sleep(1)
        activity = self.browser.find_element_by_xpath('/html/body/main/div/div/div/div[2]/span[8]')
        activity.click()
        time.sleep(1)
        name = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[1]/p/input')
        date = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[2]/p/input')
        start_h = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[3]/p/input')
        end_h = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[4]/p/input')
        periodicity = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[5]/select')
        employe = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[6]/select')
        pupil = self.browser.find_element_by_xpath('/html/body/div[2]/div/div/div/div[1]/form/div[7]/select')
        name.clear()
        date.clear()
        start_h.clear()
        end_h.clear()
        name.send_keys('Nauka pływania dla grupy niezaawansowanej')
        end_date = (datetime.now() + timedelta(days=1) ).strftime('%Y-%m-%d')
        date.send_keys(end_date)
        start_h.send_keys('12:00')
        end_h.send_keys('14:00')
        time.sleep(1)

        periodicity.click() 
        all_periodicity=periodicity.find_elements_by_tag_name("option")
        all_periodicity[1].click()

        employe.click() 

        time.sleep(1) 

        self.browser.find_element_by_xpath("/html/body/div[2]/div/div/div/div[1]/form/div[9]/button").click()   
        time.sleep(1) 
        self.wait.until(EC.text_to_be_present_in_element((By.XPATH, "/html/body/div[2]/div/div/div/div[1]/form/div[7]/span/p"), "Nie wybrano uczestników"))
        self.browser.close()